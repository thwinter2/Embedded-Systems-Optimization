; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M0+ --fpmode=fast --apcs=interwork -O3 --diag_suppress=9931 -I.\Include -I.\Source\Profiler -I.\Source\LCD -I.\Source\FS -I.\Source\ulibSD -I.\RTE\Device\MKL25Z128xxx4 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.15.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DMKL25Z128xxx4 --omf_browse=.\objects\main.crf Source\main.c]
                          THUMB

                          AREA ||i.die||, CODE, READONLY, ALIGN=1

                  ||die|| PROC
;;;25     
;;;26     void die(												/* Stop with dying message */
000000  2200              MOVS     r2,#0
;;;27     					FRESULT rc						/* FatFs return value */
;;;28     		) {
;;;29     //  printf("Failed with rc=%u.\n", rc);
;;;30     	Control_RGB_LEDs(1, 0, 0);
000002  4611              MOV      r1,r2
000004  2001              MOVS     r0,#1
000006  f7fffffe          BL       Control_RGB_LEDs
                  |L1.10|
;;;31     	for (;;);
00000a  e7fe              B        |L1.10|
;;;32     }
;;;33     
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;122     *----------------------------------------------------------------------------*/
;;;123    int main(void) {
000000  b092              SUB      sp,sp,#0x48
;;;124    	FATFS fatfs;
;;;125    	FRESULT rc;
;;;126    	int error;
;;;127    	PT_T p;
;;;128    	char buf[16];
;;;129    	
;;;130    	Init_RGB_LEDs();
000002  f7fffffe          BL       Init_RGB_LEDs
;;;131    
;;;132    #ifdef PROFILER_SERIAL_SUPPORT
;;;133    	Init_UART0(115200);
;;;134    	printf("Hello 2019!\n\r");
;;;135    #endif
;;;136    	Init_Debug_Signals();
000006  f7fffffe          BL       Init_Debug_Signals
;;;137    
;;;138    #ifdef PROFILER_LCD_SUPPORT
;;;139    	LCD_Init();
00000a  f7fffffe          BL       LCD_Init
;;;140    	LCD_Text_Init(1);
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       LCD_Text_Init
;;;141    	LCD_Erase();
000014  f7fffffe          BL       LCD_Erase
;;;142    
;;;143    	LCD_Text_PrintStr_RC(0, 0, "Initializing");
000018  2100              MOVS     r1,#0
00001a  a225              ADR      r2,|L2.176|
00001c  4608              MOV      r0,r1
00001e  f7fffffe          BL       LCD_Text_PrintStr_RC
;;;144    #endif
;;;145    
;;;146    	LCD_Text_PrintStr_RC(1, 0, "Looking for uSD card");
000022  a227              ADR      r2,|L2.192|
000024  2100              MOVS     r1,#0
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       LCD_Text_PrintStr_RC
;;;147    	rc = pf_mount(&fatfs);
00002c  4668              MOV      r0,sp
00002e  f7fffffe          BL       pf_mount
;;;148    	if (rc) {
000032  2800              CMP      r0,#0
000034  d00a              BEQ      |L2.76|
;;;149    		LCD_Text_PrintStr_RC(2, 0, "pf_mount failed");
000036  a228              ADR      r2,|L2.216|
000038  2100              MOVS     r1,#0
00003a  2002              MOVS     r0,#2
00003c  f7fffffe          BL       LCD_Text_PrintStr_RC
;;;150    		Control_RGB_LEDs(1, 0, 0);
000040  2200              MOVS     r2,#0
000042  4611              MOV      r1,r2
000044  2001              MOVS     r0,#1
000046  f7fffffe          BL       Control_RGB_LEDs
                  |L2.74|
;;;151    		while (1);
00004a  e7fe              B        |L2.74|
                  |L2.76|
;;;152    	}
;;;153    	LCD_Text_PrintStr_RC(2, 0, "Mounted uSD card");
00004c  a226              ADR      r2,|L2.232|
00004e  2100              MOVS     r1,#0
000050  2002              MOVS     r0,#2
000052  f7fffffe          BL       LCD_Text_PrintStr_RC
000056  2501              MOVS     r5,#1                 ;140
                  |L2.88|
;;;154    
;;;155    
;;;156    	while (1) {
;;;157    		Init_Profiling();
000058  f7fffffe          BL       Init_Profiling
;;;158    		LCD_Erase();
00005c  f7fffffe          BL       LCD_Erase
;;;159    		Control_RGB_LEDs(1, 0, 1);	// Magenta: running
000060  2201              MOVS     r2,#1
000062  2100              MOVS     r1,#0
000064  4610              MOV      r0,r2
000066  f7fffffe          BL       Control_RGB_LEDs
;;;160    		Enable_Profiling();
00006a  f7fffffe          BL       Enable_Profiling
;;;161    		error = LCD_JPEG();
00006e  f7fffffe          BL       LCD_JPEG
000072  4604              MOV      r4,r0
;;;162    		Disable_Profiling();
000074  f7fffffe          BL       Disable_Profiling
;;;163    		Control_RGB_LEDs(error, 1-error, 0);	// Green: ok. Red: bad.
000078  1b29              SUBS     r1,r5,r4
00007a  2200              MOVS     r2,#0
00007c  4620              MOV      r0,r4
00007e  f7fffffe          BL       Control_RGB_LEDs
;;;164    		if (error != 0) {
000082  2c00              CMP      r4,#0
000084  d00a              BEQ      |L2.156|
;;;165    			sprintf(buf, "LCD_JPEG failure %d", error);
000086  4622              MOV      r2,r4
000088  a11c              ADR      r1,|L2.252|
00008a  a80b              ADD      r0,sp,#0x2c
00008c  f7fffffe          BL       __2sprintf
;;;166    			LCD_Text_PrintStr_RC(0, 0, buf); 
000090  2100              MOVS     r1,#0
000092  aa0b              ADD      r2,sp,#0x2c
000094  4608              MOV      r0,r1
000096  f7fffffe          BL       LCD_Text_PrintStr_RC
                  |L2.154|
;;;167    			while (1)
00009a  e7fe              B        |L2.154|
                  |L2.156|
;;;168    				;
;;;169    		}
;;;170    		Sort_Profile_Regions();
00009c  f7fffffe          BL       Sort_Profile_Regions
;;;171    		LCD_TS_Blocking_Read(&p);		// Wait for user to press screen
0000a0  a80f              ADD      r0,sp,#0x3c
0000a2  f7fffffe          BL       LCD_TS_Blocking_Read
;;;172    		LCD_Erase();
0000a6  f7fffffe          BL       LCD_Erase
;;;173    		Display_Profile();
0000aa  f7fffffe          BL       Display_Profile
0000ae  e7d3              B        |L2.88|
;;;174    	}
;;;175    }
                          ENDP

                  |L2.176|
0000b0  496e6974          DCB      "Initializing",0
0000b4  69616c69
0000b8  7a696e67
0000bc  00      
0000bd  00                DCB      0
0000be  00                DCB      0
0000bf  00                DCB      0
                  |L2.192|
0000c0  4c6f6f6b          DCB      "Looking for uSD card",0
0000c4  696e6720
0000c8  666f7220
0000cc  75534420
0000d0  63617264
0000d4  00      
0000d5  00                DCB      0
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L2.216|
0000d8  70665f6d          DCB      "pf_mount failed",0
0000dc  6f756e74
0000e0  20666169
0000e4  6c656400
                  |L2.232|
0000e8  4d6f756e          DCB      "Mounted uSD card",0
0000ec  74656420
0000f0  75534420
0000f4  63617264
0000f8  00      
0000f9  00                DCB      0
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L2.252|
0000fc  4c43445f          DCB      "LCD_JPEG failure %d",0
000100  4a504547
000104  20666169
000108  6c757265
00010c  20256400

;*** Start embedded assembler ***

#line 1 "Source\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_die____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_die____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_die____REVSH|
#line 462
|__asm___6_main_c_die____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
