; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\pit.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\pit.d --cpu=Cortex-M0+ --fpmode=fast --apcs=interwork -O3 --diag_suppress=9931 -I.\Include -I.\Source\Profiler -I.\Source\LCD -I.\Source\FS -I.\Source\ulibSD -I.\RTE\Device\MKL25Z128xxx4 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.15.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DMKL25Z128xxx4 --omf_browse=.\objects\pit.crf Source\Profiler\PIT.c]
                          THUMB

                          AREA ||i.PIT_IRQHandler||, CODE, READONLY, ALIGN=2

                  PIT_IRQHandler PROC
;;;5      
;;;6      void PIT_IRQHandler() {
000000  b510              PUSH     {r4,lr}
;;;7      	// check to see which channel triggered interrupt 
;;;8      	if (PIT->CHANNEL[0].TFLG & PIT_TFLG_TIF_MASK) {
000002  480b              LDR      r0,|L1.48|
000004  68c1              LDR      r1,[r0,#0xc]
000006  07c9              LSLS     r1,r1,#31
000008  d00a              BEQ      |L1.32|
;;;9      		// clear status flag for timer channel 0
;;;10     		PIT->CHANNEL[0].TFLG &= PIT_TFLG_TIF_MASK;
00000a  68c1              LDR      r1,[r0,#0xc]
00000c  07c9              LSLS     r1,r1,#31
00000e  0fc9              LSRS     r1,r1,#31
000010  60c1              STR      r1,[r0,#0xc]
;;;11     		
;;;12     		// Do ISR work
;;;13     		// Profiler
;;;14     		if (profiling_enabled > 0) {
000012  4808              LDR      r0,|L1.52|
000014  7800              LDRB     r0,[r0,#0]  ; profiling_enabled
000016  2800              CMP      r0,#0
000018  d001              BEQ      |L1.30|
;;;15     			Process_Profile_Sample();
00001a  f7fffffe          BL       Process_Profile_Sample
                  |L1.30|
;;;16     		}
;;;17     	} else if (PIT->CHANNEL[1].TFLG & PIT_TFLG_TIF_MASK) {
;;;18     		// clear status flag for timer channel 1
;;;19     		PIT->CHANNEL[1].TFLG &= PIT_TFLG_TIF_MASK;
;;;20     	} 
;;;21     }
00001e  bd10              POP      {r4,pc}
                  |L1.32|
000020  69c1              LDR      r1,[r0,#0x1c]         ;17
000022  07c9              LSLS     r1,r1,#31             ;17
000024  d0fb              BEQ      |L1.30|
000026  69c1              LDR      r1,[r0,#0x1c]         ;19
000028  07c9              LSLS     r1,r1,#31             ;19
00002a  0fc9              LSRS     r1,r1,#31             ;19
00002c  61c1              STR      r1,[r0,#0x1c]         ;19
00002e  bd10              POP      {r4,pc}
;;;22     
                          ENDP

                  |L1.48|
                          DCD      0x40037100
                  |L1.52|
                          DCD      profiling_enabled

                          AREA ||i.PIT_Init||, CODE, READONLY, ALIGN=2

                  PIT_Init PROC
;;;22     
;;;23     void PIT_Init(unsigned period) {
000000  b510              PUSH     {r4,lr}
;;;24     	// Enable clock to PIT module
;;;25     	SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
000002  4912              LDR      r1,|L2.76|
000004  6bca              LDR      r2,[r1,#0x3c]
000006  2301              MOVS     r3,#1
000008  05db              LSLS     r3,r3,#23
00000a  431a              ORRS     r2,r2,r3
00000c  63ca              STR      r2,[r1,#0x3c]
;;;26     	
;;;27     	// Enable module, freeze timers in debug mode
;;;28     	PIT->MCR &= ~PIT_MCR_MDIS_MASK;
00000e  4910              LDR      r1,|L2.80|
000010  680b              LDR      r3,[r1,#0]
000012  2202              MOVS     r2,#2
000014  4393              BICS     r3,r3,r2
000016  600b              STR      r3,[r1,#0]
;;;29     	PIT->MCR |= PIT_MCR_FRZ_MASK;
000018  680b              LDR      r3,[r1,#0]
00001a  2401              MOVS     r4,#1
00001c  4323              ORRS     r3,r3,r4
00001e  600b              STR      r3,[r1,#0]
;;;30     	
;;;31     	// Initialize PIT0 to count down from argument 
;;;32     	PIT->CHANNEL[0].LDVAL = PIT_LDVAL_TSV(period);
000020  490c              LDR      r1,|L2.84|
000022  6008              STR      r0,[r1,#0]
;;;33     
;;;34     	// No chaining
;;;35     	PIT->CHANNEL[0].TCTRL &= PIT_TCTRL_CHN_MASK;
000024  6888              LDR      r0,[r1,#8]
000026  2304              MOVS     r3,#4
000028  4018              ANDS     r0,r0,r3
00002a  6088              STR      r0,[r1,#8]
;;;36     	
;;;37     	// Generate interrupts
;;;38     	PIT->CHANNEL[0].TCTRL |= PIT_TCTRL_TIE_MASK;
00002c  6888              LDR      r0,[r1,#8]
00002e  4310              ORRS     r0,r0,r2
000030  6088              STR      r0,[r1,#8]
000032  4909              LDR      r1,|L2.88|
000034  6808              LDR      r0,[r1,#0]
000036  22ff              MOVS     r2,#0xff
000038  0412              LSLS     r2,r2,#16
00003a  4390              BICS     r0,r0,r2
00003c  6008              STR      r0,[r1,#0]
00003e  4907              LDR      r1,|L2.92|
000040  0518              LSLS     r0,r3,#20
000042  6008              STR      r0,[r1,#0]
000044  4906              LDR      r1,|L2.96|
000046  6008              STR      r0,[r1,#0]
;;;39     
;;;40     	/* Enable Interrupts */
;;;41     	NVIC_SetPriority(PIT_IRQn, 128); // 0, 64, 128 or 192
;;;42     	NVIC_ClearPendingIRQ(PIT_IRQn); 
;;;43     	NVIC_EnableIRQ(PIT_IRQn);	
;;;44     }
000048  bd10              POP      {r4,pc}
;;;45     
                          ENDP

00004a  0000              DCW      0x0000
                  |L2.76|
                          DCD      0x40048000
                  |L2.80|
                          DCD      0x40037000
                  |L2.84|
                          DCD      0x40037100
                  |L2.88|
                          DCD      0xe000e414
                  |L2.92|
                          DCD      0xe000e280
                  |L2.96|
                          DCD      0xe000e100

                          AREA ||i.PIT_Start||, CODE, READONLY, ALIGN=2

                  PIT_Start PROC
;;;45     
;;;46     void PIT_Start(void) {
000000  4802              LDR      r0,|L3.12|
;;;47     // Enable counter
;;;48     	PIT->CHANNEL[0].TCTRL |= PIT_TCTRL_TEN_MASK;
000002  6881              LDR      r1,[r0,#8]
000004  2201              MOVS     r2,#1
000006  4311              ORRS     r1,r1,r2
000008  6081              STR      r1,[r0,#8]
;;;49     }
00000a  4770              BX       lr
;;;50     
                          ENDP

                  |L3.12|
                          DCD      0x40037100

                          AREA ||i.PIT_Stop||, CODE, READONLY, ALIGN=2

                  PIT_Stop PROC
;;;50     
;;;51     void PIT_Stop(void) {
000000  4802              LDR      r0,|L4.12|
;;;52     // Enable counter
;;;53     	PIT->CHANNEL[0].TCTRL &= ~PIT_TCTRL_TEN_MASK;
000002  6881              LDR      r1,[r0,#8]
000004  0849              LSRS     r1,r1,#1
000006  0049              LSLS     r1,r1,#1
000008  6081              STR      r1,[r0,#8]
;;;54     }
00000a  4770              BX       lr
                          ENDP

                  |L4.12|
                          DCD      0x40037100

;*** Start embedded assembler ***

#line 1 "Source\\Profiler\\PIT.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_PIT_c_7e522465____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_PIT_c_7e522465____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_PIT_c_7e522465____REVSH|
#line 462
|__asm___5_PIT_c_7e522465____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
