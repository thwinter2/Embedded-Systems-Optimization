; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\profile.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\profile.d --cpu=Cortex-M0+ --fpmode=fast --apcs=interwork//ropi -O3 -Otime --diag_suppress=9931 -I.\Include -I.\Source\Profiler -I.\Source\LCD -I.\Source\FS -I.\Source\ulibSD -I.\RTE\Device\MKL25Z128xxx4 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.15.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DMKL25Z128xxx4 --omf_browse=.\objects\profile.crf --remarks Source\Profiler\profile.c]
                          THUMB

                          AREA ||i.Disable_Profiling||, CODE, READONLY, ALIGN=2

                  Disable_Profiling PROC
;;;38     
;;;39     void Disable_Profiling(void) {
000000  4901              LDR      r1,|L1.8|
;;;40       profiling_enabled = 0;
000002  2000              MOVS     r0,#0
000004  7008              STRB     r0,[r1,#0]
;;;41     }
000006  4770              BX       lr
;;;42     
                          ENDP

                  |L1.8|
                          DCD      ||.data||

                          AREA ||i.Display_Profile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  Display_Profile PROC
;;;89     #ifdef PROFILER_LCD_SUPPORT
;;;90     void Display_Profile(void) {
000000  b5f0              PUSH     {r4-r7,lr}
000002  b091              SUB      sp,sp,#0x44
;;;91     	PT_T p, pt;
;;;92     	unsigned i, row;
;;;93     	char buffer[32];
;;;94     
;;;95     	p.X = COL_TO_X(0);
000004  2600              MOVS     r6,#0
;;;96     	row = 0;
;;;97     	p.Y = ROW_TO_Y(row);
;;;98     	snprintf(buffer, LCD_MAX_COLS, "%4lu Total Samples        ", profile_samples); 
000006  4f30              LDR      r7,|L2.200|
000008  9602              STR      r6,[sp,#8]            ;97
00000a  9603              STR      r6,[sp,#0xc]
00000c  7839              LDRB     r1,[r7,#0]  ; G_LCD_char_width
00000e  20f0              MOVS     r0,#0xf0
000010  f7fffffe          BL       __aeabi_uidivmod
000014  4a2d              LDR      r2,|L2.204|
000016  68d3              LDR      r3,[r2,#0xc]  ; profile_samples
000018  4601              MOV      r1,r0
00001a  a22d              ADR      r2,|L2.208|
00001c  a806              ADD      r0,sp,#0x18
00001e  f7fffffe          BL       __2snprintf
;;;99     	LCD_Text_Set_Colors(&white, &dark_yellow);
000022  4932              LDR      r1,|L2.236|
000024  4832              LDR      r0,|L2.240|
000026  f7fffffe          BL       LCD_Text_Set_Colors
;;;100    	LCD_Text_PrintStr(&p, buffer);
00002a  a906              ADD      r1,sp,#0x18
00002c  a802              ADD      r0,sp,#8
00002e  f7fffffe          BL       LCD_Text_PrintStr
;;;101    	LCD_Text_Set_Colors(&yellow, &black);
000032  4930              LDR      r1,|L2.244|
000034  4830              LDR      r0,|L2.248|
000036  f7fffffe          BL       LCD_Text_Set_Colors
;;;102    	row++;
00003a  2401              MOVS     r4,#1
;;;103    	
;;;104    	for (i=0; i<NumProfileRegions; i++) {
00003c  482f              LDR      r0,|L2.252|
00003e  2500              MOVS     r5,#0
000040  4478              ADD      r0,r0,pc
000042  6801              LDR      r1,[r0,#0]  ; NumProfileRegions
000044  2900              CMP      r1,#0
000046  d938              BLS      |L2.186|
                  |L2.72|
;;;105    		if (RegionCount[SortedRegions[i]] > 0) {
000048  482d              LDR      r0,|L2.256|
00004a  00a9              LSLS     r1,r5,#2              ;104
00004c  5847              LDR      r7,[r0,r1]
00004e  482d              LDR      r0,|L2.260|
000050  00be              LSLS     r6,r7,#2
000052  5980              LDR      r0,[r0,r6]
000054  2800              CMP      r0,#0
000056  d02a              BEQ      |L2.174|
;;;106    			p.X = COL_TO_X(0);
000058  2000              MOVS     r0,#0
;;;107    			p.Y = ROW_TO_Y(row);
00005a  9002              STR      r0,[sp,#8]
00005c  482a              LDR      r0,|L2.264|
00005e  7800              LDRB     r0,[r0,#0]  ; G_LCD_char_height
000060  4360              MULS     r0,r4,r0
;;;108    			snprintf(buffer, LCD_MAX_COLS, "%4u %s", RegionCount[SortedRegions[i]], RegionTable[SortedRegions[i]].Name);
000062  9003              STR      r0,[sp,#0xc]
000064  4818              LDR      r0,|L2.200|
000066  7801              LDRB     r1,[r0,#0]  ; G_LCD_char_width
000068  20f0              MOVS     r0,#0xf0
00006a  f7fffffe          BL       __aeabi_uidivmod
00006e  4927              LDR      r1,|L2.268|
000070  017a              LSLS     r2,r7,#5
000072  4479              ADD      r1,r1,pc
000074  1851              ADDS     r1,r2,r1
000076  3108              ADDS     r1,r1,#8
000078  9100              STR      r1,[sp,#0]
00007a  4922              LDR      r1,|L2.260|
00007c  598b              LDR      r3,[r1,r6]
00007e  4601              MOV      r1,r0
000080  a223              ADR      r2,|L2.272|
000082  a806              ADD      r0,sp,#0x18
000084  f7fffffe          BL       __2snprintf
;;;109    			LCD_Text_PrintStr(&p, buffer);
000088  a906              ADD      r1,sp,#0x18
00008a  a802              ADD      r0,sp,#8
00008c  f7fffffe          BL       LCD_Text_PrintStr
;;;110    			row++;
;;;111    			if (row >= LCD_MAX_ROWS) {
000090  481d              LDR      r0,|L2.264|
000092  1c64              ADDS     r4,r4,#1
000094  7801              LDRB     r1,[r0,#0]  ; G_LCD_char_height
000096  20ff              MOVS     r0,#0xff
000098  3041              ADDS     r0,r0,#0x41
00009a  f7fffffe          BL       __aeabi_uidivmod
00009e  42a0              CMP      r0,r4
0000a0  d805              BHI      |L2.174|
;;;112    				LCD_TS_Blocking_Read(&pt);
0000a2  a80e              ADD      r0,sp,#0x38
0000a4  f7fffffe          BL       LCD_TS_Blocking_Read
;;;113    				row = 0;
0000a8  2400              MOVS     r4,#0
;;;114    				LCD_Erase();
0000aa  f7fffffe          BL       LCD_Erase
                  |L2.174|
0000ae  481a              LDR      r0,|L2.280|
0000b0  4478              ADD      r0,r0,pc              ;104
0000b2  6800              LDR      r0,[r0,#0]            ;104  ; NumProfileRegions
0000b4  1c6d              ADDS     r5,r5,#1              ;104
0000b6  4285              CMP      r5,r0                 ;104
0000b8  d3c6              BCC      |L2.72|
                  |L2.186|
;;;115    			}
;;;116    		}
;;;117    	}
;;;118    	LCD_TS_Blocking_Read(&pt);
0000ba  a80e              ADD      r0,sp,#0x38
0000bc  f7fffffe          BL       LCD_TS_Blocking_Read
;;;119    	LCD_Erase();
0000c0  f7fffffe          BL       LCD_Erase
;;;120    }
0000c4  b011              ADD      sp,sp,#0x44
0000c6  bdf0              POP      {r4-r7,pc}
;;;121    
                          ENDP

                  |L2.200|
                          DCD      G_LCD_char_width
                  |L2.204|
                          DCD      ||.data||
                  |L2.208|
0000d0  25346c75          DCB      "%4lu Total Samples        ",0
0000d4  20546f74
0000d8  616c2053
0000dc  616d706c
0000e0  65732020
0000e4  20202020
0000e8  202000  
0000eb  00                DCB      0
                  |L2.236|
                          DCD      dark_yellow
                  |L2.240|
                          DCD      white
                  |L2.244|
                          DCD      black
                  |L2.248|
                          DCD      yellow
                  |L2.252|
                          DCD      NumProfileRegions+0xb8 - {PC}
                  |L2.256|
                          DCD      SortedRegions
                  |L2.260|
                          DCD      RegionCount
                  |L2.264|
                          DCD      G_LCD_char_height
                  |L2.268|
                          DCD      RegionTable+0x96 - {PC}
                  |L2.272|
000110  25347520          DCB      "%4u %s",0
000114  257300  
000117  00                DCB      0
                  |L2.280|
                          DCD      NumProfileRegions+0x64 - {PC}

                          AREA ||i.Enable_Profiling||, CODE, READONLY, ALIGN=2

                  Enable_Profiling PROC
;;;42     
;;;43     void Enable_Profiling(void) {
000000  4901              LDR      r1,|L3.8|
;;;44       profiling_enabled = 1;
000002  2001              MOVS     r0,#1
000004  7008              STRB     r0,[r1,#0]
;;;45     }
000006  4770              BX       lr
;;;46     
                          ENDP

                  |L3.8|
                          DCD      ||.data||

                          AREA ||i.Init_Profiling||, CODE, READONLY, ALIGN=2

                  Init_Profiling PROC
;;;22     
;;;23     void Init_Profiling(void) {
000000  b510              PUSH     {r4,lr}
;;;24     	unsigned i;
;;;25     	
;;;26     	profile_samples = 0;
000002  4913              LDR      r1,|L4.80|
000004  2000              MOVS     r0,#0
000006  60c8              STR      r0,[r1,#0xc]  ; profile_samples
;;;27     	num_lost = 0;
000008  6088              STR      r0,[r1,#8]  ; num_lost
;;;28     	adx_lost = 0;
00000a  6048              STR      r0,[r1,#4]  ; adx_lost
;;;29     	
;;;30     	// Clear region counts
;;;31       for (i=0; i<NumProfileRegions; i++) {
00000c  4c11              LDR      r4,|L4.84|
00000e  447c              ADD      r4,r4,pc
000010  6821              LDR      r1,[r4,#0]  ; NumProfileRegions
000012  2900              CMP      r1,#0
000014  d010              BEQ      |L4.56|
;;;32     	  RegionCount[i]=0;
;;;33       }
000016  7821              LDRB     r1,[r4,#0]  ; NumProfileRegions
000018  4a0f              LDR      r2,|L4.88|
00001a  07c9              LSLS     r1,r1,#31
00001c  0fc9              LSRS     r1,r1,#31
00001e  d000              BEQ      |L4.34|
000020  6010              STR      r0,[r2,#0]            ;32  ; RegionCount
                  |L4.34|
000022  6823              LDR      r3,[r4,#0]            ;31  ; NumProfileRegions
000024  4299              CMP      r1,r3                 ;31
000026  d207              BCS      |L4.56|
                  |L4.40|
000028  008b              LSLS     r3,r1,#2              ;31
00002a  50d0              STR      r0,[r2,r3]            ;32
00002c  189b              ADDS     r3,r3,r2              ;32
00002e  6058              STR      r0,[r3,#4]            ;32
000030  6823              LDR      r3,[r4,#0]            ;32  ; NumProfileRegions
000032  1c89              ADDS     r1,r1,#2              ;32
000034  4299              CMP      r1,r3                 ;32
000036  d3f7              BCC      |L4.40|
                  |L4.56|
;;;34     	// Initialize and start timer
;;;35     	PIT_Init(SAMPLE_FREQ_HZ_TO_TICKS(PROFILER_SAMPLE_FREQ_HZ));
000038  4808              LDR      r0,|L4.92|
00003a  217d              MOVS     r1,#0x7d
00003c  0109              LSLS     r1,r1,#4
00003e  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000040  f7fffffe          BL       __aeabi_uidivmod
000044  1e40              SUBS     r0,r0,#1
000046  f7fffffe          BL       PIT_Init
;;;36     	PIT_Start();
00004a  f7fffffe          BL       PIT_Start
;;;37     }
00004e  bd10              POP      {r4,pc}
;;;38     
                          ENDP

                  |L4.80|
                          DCD      ||.data||
                  |L4.84|
                          DCD      NumProfileRegions+0x42 - {PC}
                  |L4.88|
                          DCD      RegionCount
                  |L4.92|
                          DCD      SystemCoreClock

                          AREA ||i.New_Display_Profile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_u
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  New_Display_Profile PROC
;;;121    
;;;122    void New_Display_Profile(void) {
000000  b08e              SUB      sp,sp,#0x38
;;;123    	PT_T p, tp;
;;;124    	int i, row;
;;;125    	char buffer[32];
;;;126    	
;;;127    	p.X = 0;
000002  2500              MOVS     r5,#0
;;;128    	row = 0;
;;;129    	p.Y = ROW_TO_Y(row);
;;;130    	snprintf(buffer, LCD_MAX_COLS, "%4lu Total Samples", profile_samples); 
000004  4e39              LDR      r6,|L5.236|
000006  9504              STR      r5,[sp,#0x10]         ;129
000008  9505              STR      r5,[sp,#0x14]
00000a  7831              LDRB     r1,[r6,#0]  ; G_LCD_char_width
00000c  20f0              MOVS     r0,#0xf0
00000e  f7fffffe          BL       __aeabi_uidivmod
000012  4a37              LDR      r2,|L5.240|
000014  68d3              LDR      r3,[r2,#0xc]  ; profile_samples
000016  4601              MOV      r1,r0
000018  a236              ADR      r2,|L5.244|
00001a  a806              ADD      r0,sp,#0x18
00001c  f7fffffe          BL       __2snprintf
;;;131    	LCD_Text_PrintStr(&p, buffer);
000020  a906              ADD      r1,sp,#0x18
000022  a804              ADD      r0,sp,#0x10
000024  f7fffffe          BL       LCD_Text_PrintStr
;;;132    	row++;
;;;133    	i = 0;
000028  2400              MOVS     r4,#0
;;;134    	LCD_TS_Blocking_Read(&tp);
00002a  a802              ADD      r0,sp,#8
00002c  f7fffffe          BL       LCD_TS_Blocking_Read
;;;135    	
;;;136    	while (1) {
;;;137    			for (row = 0; row < LCD_MAX_ROWS-1; row++) {
;;;138    				if ((i < NumProfileRegions) && (RegionCount[i] > 0)) {
000030  4e35              LDR      r6,|L5.264|
000032  447e              ADD      r6,r6,pc
                  |L5.52|
000034  4f35              LDR      r7,|L5.268|
000036  20ff              MOVS     r0,#0xff              ;137
000038  2500              MOVS     r5,#0                 ;137
00003a  7839              LDRB     r1,[r7,#0]            ;137  ; G_LCD_char_height
00003c  3041              ADDS     r0,r0,#0x41           ;137
00003e  f7fffffe          BL       __aeabi_uidivmod
000042  1e40              SUBS     r0,r0,#1              ;137
000044  2800              CMP      r0,#0                 ;137
000046  ddf5              BLE      |L5.52|
                  |L5.72|
000048  6830              LDR      r0,[r6,#0]  ; NumProfileRegions
00004a  4284              CMP      r4,r0
00004c  d220              BCS      |L5.144|
00004e  4830              LDR      r0,|L5.272|
000050  00a7              LSLS     r7,r4,#2
000052  59c0              LDR      r0,[r0,r7]
000054  2800              CMP      r0,#0
000056  d01b              BEQ      |L5.144|
;;;139    					p.X = COL_TO_X(0);
000058  2000              MOVS     r0,#0
;;;140    					p.Y = ROW_TO_Y(row);
00005a  9004              STR      r0,[sp,#0x10]
00005c  482b              LDR      r0,|L5.268|
00005e  7800              LDRB     r0,[r0,#0]  ; G_LCD_char_height
000060  4368              MULS     r0,r5,r0
;;;141    					snprintf(buffer, LCD_MAX_COLS, "%4u %s", RegionCount[i], RegionTable[i].Name);
000062  9005              STR      r0,[sp,#0x14]
000064  4821              LDR      r0,|L5.236|
000066  7801              LDRB     r1,[r0,#0]  ; G_LCD_char_width
000068  20f0              MOVS     r0,#0xf0
00006a  f7fffffe          BL       __aeabi_uidivmod
00006e  4a29              LDR      r2,|L5.276|
000070  4601              MOV      r1,r0
000072  0163              LSLS     r3,r4,#5
000074  447a              ADD      r2,r2,pc
000076  1898              ADDS     r0,r3,r2
000078  3008              ADDS     r0,r0,#8
00007a  9000              STR      r0,[sp,#0]
00007c  4824              LDR      r0,|L5.272|
00007e  59c3              LDR      r3,[r0,r7]
000080  a225              ADR      r2,|L5.280|
000082  a806              ADD      r0,sp,#0x18
000084  f7fffffe          BL       __2snprintf
;;;142    					LCD_Text_PrintStr(&p, buffer);
000088  a906              ADD      r1,sp,#0x18
00008a  a804              ADD      r0,sp,#0x10
00008c  f7fffffe          BL       LCD_Text_PrintStr
                  |L5.144|
;;;143    				}
;;;144    				i++;
;;;145    				p.X = COL_TO_X(0);
000090  2000              MOVS     r0,#0
;;;146    				p.Y = ROW_TO_Y(row);
000092  4f1e              LDR      r7,|L5.268|
000094  9004              STR      r0,[sp,#0x10]
000096  7838              LDRB     r0,[r7,#0]  ; G_LCD_char_height
;;;147    				LCD_Text_PrintStr(&p, "Previous      Next"); 
000098  a121              ADR      r1,|L5.288|
00009a  4368              MULS     r0,r5,r0              ;146
00009c  9005              STR      r0,[sp,#0x14]
00009e  a804              ADD      r0,sp,#0x10
0000a0  1c64              ADDS     r4,r4,#1
0000a2  f7fffffe          BL       LCD_Text_PrintStr
;;;148    				LCD_TS_Blocking_Read(&tp);
0000a6  a802              ADD      r0,sp,#8
0000a8  f7fffffe          BL       LCD_TS_Blocking_Read
;;;149    				if (tp.X < LCD_WIDTH/2) {
0000ac  9802              LDR      r0,[sp,#8]
0000ae  2878              CMP      r0,#0x78
0000b0  d209              BCS      |L5.198|
;;;150    					// to go back
;;;151    					i -= 2*(LCD_MAX_ROWS-1);
0000b2  20ff              MOVS     r0,#0xff
0000b4  7839              LDRB     r1,[r7,#0]  ; G_LCD_char_height
0000b6  3041              ADDS     r0,r0,#0x41
0000b8  f7fffffe          BL       __aeabi_uidivmod
0000bc  0040              LSLS     r0,r0,#1
0000be  1a24              SUBS     r4,r4,r0
0000c0  1ca4              ADDS     r4,r4,#2
;;;152    					if (i < 0)
;;;153    						i = 0;
0000c2  d410              BMI      |L5.230|
0000c4  e003              B        |L5.206|
                  |L5.198|
;;;154    				} else {
;;;155    					// go forward, no change to i needed
;;;156    					if (i>= NumProfileRegions)
0000c6  6830              LDR      r0,[r6,#0]  ; NumProfileRegions
0000c8  4284              CMP      r4,r0
0000ca  d300              BCC      |L5.206|
;;;157    							i = NumProfileRegions-1;
0000cc  1e44              SUBS     r4,r0,#1
                  |L5.206|
;;;158    				}
;;;159    				LCD_Erase();
0000ce  f7fffffe          BL       LCD_Erase
0000d2  20ff              MOVS     r0,#0xff
0000d4  7839              LDRB     r1,[r7,#0]  ; G_LCD_char_height
0000d6  3041              ADDS     r0,r0,#0x41
0000d8  1c6d              ADDS     r5,r5,#1
0000da  f7fffffe          BL       __aeabi_uidivmod
0000de  1e40              SUBS     r0,r0,#1
0000e0  42a8              CMP      r0,r5
0000e2  dcb1              BGT      |L5.72|
0000e4  e7a6              B        |L5.52|
                  |L5.230|
0000e6  2400              MOVS     r4,#0                 ;153
0000e8  e7f1              B        |L5.206|
;;;160    			}
;;;161    		}
;;;162    	}
;;;163    
                          ENDP

0000ea  0000              DCW      0x0000
                  |L5.236|
                          DCD      G_LCD_char_width
                  |L5.240|
                          DCD      ||.data||
                  |L5.244|
0000f4  25346c75          DCB      "%4lu Total Samples",0
0000f8  20546f74
0000fc  616c2053
000100  616d706c
000104  657300  
000107  00                DCB      0
                  |L5.264|
                          DCD      NumProfileRegions+0xd2 - {PC}
                  |L5.268|
                          DCD      G_LCD_char_height
                  |L5.272|
                          DCD      RegionCount
                  |L5.276|
                          DCD      RegionTable+0x9c - {PC}
                  |L5.280|
000118  25347520          DCB      "%4u %s",0
00011c  257300  
00011f  00                DCB      0
                  |L5.288|
000120  50726576          DCB      "Previous      Next",0
000124  696f7573
000128  20202020
00012c  20204e65
000130  787400  
000133  00                DCB      0

                          AREA ||i.Process_Profile_Sample||, CODE, READONLY, ALIGN=2

                  Process_Profile_Sample PROC
;;;46     
;;;47     void Process_Profile_Sample(void) {
000000  b470              PUSH     {r4-r6}
;;;48     	unsigned int s, e;
;;;49       unsigned int i;
;;;50     	
;;;51     	PC_val = *((unsigned int *) (CUR_SP + FRAME_SIZE + HW_RET_ADX_OFFSET));
000002  f3ef8008          MRS      r0,MSP
000006  6ac1              LDR      r1,[r0,#0x2c]
000008  4816              LDR      r0,|L6.100|
00000a  6101              STR      r1,[r0,#0x10]  ; PC_val
;;;52     
;;;53     	profile_samples++;
00000c  68c1              LDR      r1,[r0,#0xc]  ; profile_samples
00000e  1c49              ADDS     r1,r1,#1
000010  60c1              STR      r1,[r0,#0xc]  ; profile_samples
;;;54     
;;;55     	/* look up function in table and increment counter  */
;;;56     	for (i=0; i<NumProfileRegions; i++) {
000012  4d15              LDR      r5,|L6.104|
000014  2100              MOVS     r1,#0
000016  447d              ADD      r5,r5,pc
000018  682a              LDR      r2,[r5,#0]  ; NumProfileRegions
00001a  2a00              CMP      r2,#0
00001c  d917              BLS      |L6.78|
;;;57     		s = RegionTable[i].Start & ~1; // Convert Thumb instruction address by zeroing LS bit
00001e  4e13              LDR      r6,|L6.108|
000020  447e              ADD      r6,r6,pc
                  |L6.34|
000022  014a              LSLS     r2,r1,#5
000024  58b3              LDR      r3,[r6,r2]
;;;58     		e = RegionTable[i].End;
;;;59     		if ((PC_val >= s) && (PC_val <= e)) {
000026  6904              LDR      r4,[r0,#0x10]  ; PC_val
000028  085b              LSRS     r3,r3,#1              ;57
00002a  005b              LSLS     r3,r3,#1              ;57
00002c  1992              ADDS     r2,r2,r6              ;58
00002e  6852              LDR      r2,[r2,#4]            ;58
000030  429c              CMP      r4,r3
000032  d308              BCC      |L6.70|
000034  6903              LDR      r3,[r0,#0x10]  ; PC_val
000036  4293              CMP      r3,r2
000038  d805              BHI      |L6.70|
;;;60     			RegionCount[i]++;
00003a  4c0d              LDR      r4,|L6.112|
00003c  008a              LSLS     r2,r1,#2              ;59
00003e  58a3              LDR      r3,[r4,r2]
000040  1c5b              ADDS     r3,r3,#1
000042  50a3              STR      r3,[r4,r2]
;;;61     			break; // break out of the for loop
000044  e003              B        |L6.78|
                  |L6.70|
000046  682a              LDR      r2,[r5,#0]            ;56  ; NumProfileRegions
000048  1c49              ADDS     r1,r1,#1              ;56
00004a  4291              CMP      r1,r2                 ;56
00004c  d3e9              BCC      |L6.34|
                  |L6.78|
;;;62     		}
;;;63     	}
;;;64     	if (i == NumProfileRegions) {
00004e  682a              LDR      r2,[r5,#0]  ; NumProfileRegions
000050  4291              CMP      r1,r2
000052  d104              BNE      |L6.94|
;;;65     		adx_lost = PC_val;
000054  6901              LDR      r1,[r0,#0x10]  ; PC_val
000056  6041              STR      r1,[r0,#4]  ; adx_lost
;;;66     		num_lost++;
000058  6881              LDR      r1,[r0,#8]  ; num_lost
00005a  1c49              ADDS     r1,r1,#1
00005c  6081              STR      r1,[r0,#8]  ; num_lost
                  |L6.94|
;;;67     	}
;;;68     }
00005e  bc70              POP      {r4-r6}
000060  4770              BX       lr
;;;69     
                          ENDP

000062  0000              DCW      0x0000
                  |L6.100|
                          DCD      ||.data||
                  |L6.104|
                          DCD      NumProfileRegions+0x4e - {PC}
                  |L6.108|
                          DCD      RegionTable+0x48 - {PC}
                  |L6.112|
                          DCD      RegionCount

                          AREA ||i.Sort_Profile_Regions||, CODE, READONLY, ALIGN=2

                  Sort_Profile_Regions PROC
;;;69     
;;;70     void Sort_Profile_Regions(void) {
000000  4a28              LDR      r2,|L7.164|
;;;71         unsigned int i, j, temp;
;;;72     
;;;73         // Copy unsorted region numbers into table
;;;74         for (i = 0; i < NumProfileRegions; i++) {
000002  447a              ADD      r2,r2,pc
000004  6810              LDR      r0,[r2,#0]  ; NumProfileRegions
000006  2800              CMP      r0,#0
000008  d04a              BEQ      |L7.160|
00000a  b4f0              PUSH     {r4-r7}               ;70
;;;75             SortedRegions[i] = i;
;;;76         }
;;;77         // Sort those region numbers
;;;78         for (i = 0; i < NumProfileRegions; ++i) {
;;;79             for (j = i + 1; j < NumProfileRegions; ++j) {
;;;80                 if (RegionCount[SortedRegions[i]] < RegionCount[SortedRegions[j]]) {
;;;81                     temp = SortedRegions[i];
;;;82                     SortedRegions[i] = SortedRegions[j];
;;;83                     SortedRegions[j] = temp;
;;;84                 }
;;;85             }
;;;86         }
;;;87     }
00000c  7814              LDRB     r4,[r2,#0]  ; NumProfileRegions
00000e  4926              LDR      r1,|L7.168|
000010  2000              MOVS     r0,#0
000012  07e4              LSLS     r4,r4,#31
000014  d002              BEQ      |L7.28|
000016  6048              STR      r0,[r1,#4]
000018  2001              MOVS     r0,#1
00001a  1d09              ADDS     r1,r1,#4
                  |L7.28|
00001c  6814              LDR      r4,[r2,#0]            ;74  ; NumProfileRegions
00001e  0864              LSRS     r4,r4,#1              ;74
000020  46a4              MOV      r12,r4                ;74
000022  d00c              BEQ      |L7.62|
                  |L7.36|
000024  1c44              ADDS     r4,r0,#1              ;75
000026  608c              STR      r4,[r1,#8]
000028  6048              STR      r0,[r1,#4]
00002a  4664              MOV      r4,r12
00002c  1e64              SUBS     r4,r4,#1
00002e  1c80              ADDS     r0,r0,#2
000030  3108              ADDS     r1,r1,#8
000032  46a4              MOV      r12,r4
000034  2c00              CMP      r4,#0
000036  d1f5              BNE      |L7.36|
000038  6810              LDR      r0,[r2,#0]            ;78  ; NumProfileRegions
00003a  2800              CMP      r0,#0                 ;78
00003c  d02e              BEQ      |L7.156|
                  |L7.62|
00003e  6810              LDR      r0,[r2,#0]            ;78  ; NumProfileRegions
000040  2800              CMP      r0,#0                 ;78
000042  d92b              BLS      |L7.156|
000044  4919              LDR      r1,|L7.172|
                  |L7.70|
000046  481a              LDR      r0,|L7.176|
000048  4478              ADD      r0,r0,pc              ;79
00004a  6802              LDR      r2,[r0,#0]            ;79  ; NumProfileRegions
00004c  4660              MOV      r0,r12                ;79
00004e  1c40              ADDS     r0,r0,#1              ;79
000050  4282              CMP      r2,r0                 ;79
000052  d91b              BLS      |L7.140|
000054  4a17              LDR      r2,|L7.180|
000056  4660              MOV      r0,r12                ;79
000058  447a              ADD      r2,r2,pc              ;79
00005a  6813              LDR      r3,[r2,#0]            ;79  ; NumProfileRegions
00005c  1c40              ADDS     r0,r0,#1              ;79
00005e  4298              CMP      r0,r3                 ;79
000060  d214              BCS      |L7.140|
000062  4662              MOV      r2,r12                ;71
000064  0094              LSLS     r4,r2,#2              ;80
                  |L7.102|
000066  4b14              LDR      r3,|L7.184|
000068  591a              LDR      r2,[r3,r4]            ;80
00006a  0095              LSLS     r5,r2,#2              ;80
00006c  594e              LDR      r6,[r1,r5]            ;80
00006e  0085              LSLS     r5,r0,#2              ;80
000070  595b              LDR      r3,[r3,r5]            ;80
000072  009f              LSLS     r7,r3,#2              ;80
000074  59cf              LDR      r7,[r1,r7]            ;80
000076  42be              CMP      r6,r7                 ;80
000078  d202              BCS      |L7.128|
00007a  4e0f              LDR      r6,|L7.184|
00007c  5133              STR      r3,[r6,r4]            ;82
00007e  5172              STR      r2,[r6,r5]            ;83
                  |L7.128|
000080  4a0e              LDR      r2,|L7.188|
000082  447a              ADD      r2,r2,pc              ;83
000084  6812              LDR      r2,[r2,#0]            ;83  ; NumProfileRegions
000086  1c40              ADDS     r0,r0,#1              ;83
000088  4290              CMP      r0,r2                 ;83
00008a  d3ec              BCC      |L7.102|
                  |L7.140|
00008c  4660              MOV      r0,r12                ;83
00008e  1c40              ADDS     r0,r0,#1              ;83
000090  4a0b              LDR      r2,|L7.192|
000092  4684              MOV      r12,r0                ;83
000094  447a              ADD      r2,r2,pc              ;83
000096  6812              LDR      r2,[r2,#0]            ;83  ; NumProfileRegions
000098  4290              CMP      r0,r2                 ;83
00009a  d3d4              BCC      |L7.70|
                  |L7.156|
00009c  bcf0              POP      {r4-r7}
00009e  4770              BX       lr
                  |L7.160|
0000a0  4770              BX       lr
;;;88     
                          ENDP

0000a2  0000              DCW      0x0000
                  |L7.164|
                          DCD      NumProfileRegions+0x9e - {PC}
                  |L7.168|
                          DCD      SortedRegions-0x4
                  |L7.172|
                          DCD      RegionCount
                  |L7.176|
                          DCD      NumProfileRegions+0x64 - {PC}
                  |L7.180|
                          DCD      NumProfileRegions+0x58 - {PC}
                  |L7.184|
                          DCD      SortedRegions
                  |L7.188|
                          DCD      NumProfileRegions+0x36 - {PC}
                  |L7.192|
                          DCD      NumProfileRegions+0x28 - {PC}

                          AREA ||.data||, DATA, ALIGN=2

                  profiling_enabled
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  adx_lost
                          DCD      0x00000000
                  num_lost
                          DCD      0x00000000
                  profile_samples
                          DCD      0x00000000
                  PC_val
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Source\\Profiler\\profile.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_profile_c_adx_lost____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_profile_c_adx_lost____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_profile_c_adx_lost____REVSH|
#line 462
|__asm___9_profile_c_adx_lost____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
