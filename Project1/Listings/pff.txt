; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\pff.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\pff.d --cpu=Cortex-M0+ --fpmode=fast --apcs=interwork -O3 -Otime --diag_suppress=9931 -I.\Include -I.\Source\Profiler -I.\Source\LCD -I.\Source\FS -I.\Source\ulibSD -I.\RTE\Device\MKL25Z128xxx4 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\Kinetis_KLxx_DFP\1.15.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=523 -D_RTE_ -DMKL25Z128xxx4 --omf_browse=.\objects\pff.crf --remarks Source\FS\pff.c]
                          THUMB

                          AREA ||i.dir_next||, CODE, READONLY, ALIGN=2

                  dir_next PROC
;;;543    
;;;544    static FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table */
000000  b5f8              PUSH     {r3-r7,lr}
;;;545    	DIR *dj			/* Pointer to directory object */
;;;546    )
;;;547    {
000002  4605              MOV      r5,r0
;;;548    	CLUST clst;
;;;549    	WORD i;
;;;550    	FATFS *fs = FatFs;
000004  4f2c              LDR      r7,|L1.184|
;;;551    
;;;552    
;;;553    	i = dj->index + 1;
000006  8829              LDRH     r1,[r5,#0]
000008  6838              LDR      r0,[r7,#0]            ;550  ; FatFs
00000a  1c49              ADDS     r1,r1,#1
00000c  040e              LSLS     r6,r1,#16
00000e  4604              MOV      r4,r0                 ;550
000010  0c36              LSRS     r6,r6,#16
000012  d03d              BEQ      |L1.144|
;;;554    	if (!i || !dj->sect) return FR_NO_FILE;	/* Report EOT when index has reached 65535 */
000014  6929              LDR      r1,[r5,#0x10]
000016  2900              CMP      r1,#0
000018  d03a              BEQ      |L1.144|
;;;555    
;;;556    	if (!(i % 16)) {		/* Sector changed? */
00001a  0732              LSLS     r2,r6,#28
00001c  d148              BNE      |L1.176|
00001e  1c49              ADDS     r1,r1,#1
;;;557    		dj->sect++;			/* Next sector */
;;;558    
;;;559    		if (dj->clust == 0) {	/* Static table */
000020  6129              STR      r1,[r5,#0x10]
000022  68ea              LDR      r2,[r5,#0xc]
000024  2a00              CMP      r2,#0
000026  d00d              BEQ      |L1.68|
;;;560    			if (i >= fs->n_rootdir) return FR_NO_FILE;	/* Report EOT when end of table */
;;;561    		}
;;;562    		else {					/* Dynamic table */
;;;563    			if (((i / 16) & (fs->csize - 1)) == 0) {	/* Cluster changed? */
000028  78a3              LDRB     r3,[r4,#2]
00002a  0931              LSRS     r1,r6,#4
00002c  1e5b              SUBS     r3,r3,#1
00002e  4219              TST      r1,r3
000030  d13e              BNE      |L1.176|
000032  2a02              CMP      r2,#2
;;;564    				clst = get_fat(dj->clust);		/* Get next cluster */
000034  d327              BCC      |L1.134|
000036  6881              LDR      r1,[r0,#8]
000038  4291              CMP      r1,r2
00003a  d924              BLS      |L1.134|
00003c  7801              LDRB     r1,[r0,#0]
00003e  2903              CMP      r1,#3
000040  d121              BNE      |L1.134|
000042  e003              B        |L1.76|
                  |L1.68|
000044  88a0              LDRH     r0,[r4,#4]            ;560
000046  42b0              CMP      r0,r6                 ;560
000048  d922              BLS      |L1.144|
00004a  e031              B        |L1.176|
                  |L1.76|
00004c  68c0              LDR      r0,[r0,#0xc]          ;560
00004e  09d1              LSRS     r1,r2,#7              ;560
000050  1841              ADDS     r1,r0,r1              ;560
000052  0650              LSLS     r0,r2,#25             ;560
000054  0dc2              LSRS     r2,r0,#23             ;560
000056  2304              MOVS     r3,#4                 ;560
000058  4668              MOV      r0,sp                 ;560
00005a  f7fffffe          BL       disk_readp
00005e  2800              CMP      r0,#0                 ;560
000060  d111              BNE      |L1.134|
000062  4668              MOV      r0,sp                 ;560
000064  78c0              LDRB     r0,[r0,#3]            ;560
000066  0201              LSLS     r1,r0,#8              ;560
000068  4668              MOV      r0,sp                 ;560
00006a  7880              LDRB     r0,[r0,#2]            ;560
00006c  4301              ORRS     r1,r1,r0              ;560
00006e  4668              MOV      r0,sp                 ;560
000070  7840              LDRB     r0,[r0,#1]            ;560
000072  0209              LSLS     r1,r1,#8              ;560
000074  4301              ORRS     r1,r1,r0              ;560
000076  4668              MOV      r0,sp                 ;560
000078  7800              LDRB     r0,[r0,#0]            ;560
00007a  0209              LSLS     r1,r1,#8              ;560
00007c  4301              ORRS     r1,r1,r0              ;560
00007e  0108              LSLS     r0,r1,#4              ;560
000080  0900              LSRS     r0,r0,#4              ;560
;;;565    				if (clst <= 1) return FR_DISK_ERR;
000082  2801              CMP      r0,#1
000084  d801              BHI      |L1.138|
                  |L1.134|
000086  2001              MOVS     r0,#1
;;;566    				if (clst >= fs->n_fatent) return FR_NO_FILE;	/* Report EOT when it reached end of dynamic table */
;;;567    				dj->clust = clst;				/* Initialize data for new cluster */
;;;568    				dj->sect = clust2sect(clst);
;;;569    			}
;;;570    		}
;;;571    	}
;;;572    
;;;573    	dj->index = i;
;;;574    
;;;575    	return FR_OK;
;;;576    }
000088  bdf8              POP      {r3-r7,pc}
                  |L1.138|
00008a  68a1              LDR      r1,[r4,#8]            ;566
00008c  4281              CMP      r1,r0                 ;566
00008e  d801              BHI      |L1.148|
                  |L1.144|
000090  2003              MOVS     r0,#3                 ;566
000092  bdf8              POP      {r3-r7,pc}
                  |L1.148|
000094  60e8              STR      r0,[r5,#0xc]
000096  6839              LDR      r1,[r7,#0]  ; FatFs
000098  1e80              SUBS     r0,r0,#2
00009a  688a              LDR      r2,[r1,#8]
00009c  1e92              SUBS     r2,r2,#2
00009e  4282              CMP      r2,r0
0000a0  d801              BHI      |L1.166|
0000a2  2000              MOVS     r0,#0
0000a4  e003              B        |L1.174|
                  |L1.166|
0000a6  788a              LDRB     r2,[r1,#2]
0000a8  4342              MULS     r2,r0,r2
0000aa  6948              LDR      r0,[r1,#0x14]
0000ac  1810              ADDS     r0,r2,r0
                  |L1.174|
0000ae  6128              STR      r0,[r5,#0x10]         ;568
                  |L1.176|
0000b0  802e              STRH     r6,[r5,#0]            ;573
0000b2  2000              MOVS     r0,#0                 ;575
0000b4  bdf8              POP      {r3-r7,pc}
;;;577    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L1.184|
                          DCD      ||.data||

                          AREA ||i.follow_path||, CODE, READONLY, ALIGN=2

                  follow_path PROC
;;;742    
;;;743    static FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
000000  b5f7              PUSH     {r0-r2,r4-r7,lr}
;;;744    	DIR *dj,			/* Directory object to return last directory and found object */
;;;745    	BYTE *dir,			/* 32-byte working buffer */
;;;746    	const char *path	/* Full-path string to find a file or directory */
;;;747    )
;;;748    {
;;;749    	FRESULT res;
;;;750    
;;;751    
;;;752    	while (*path == ' ') path++;		/* Strip leading spaces */
000002  7810              LDRB     r0,[r2,#0]
000004  b082              SUB      sp,sp,#8              ;748
000006  4616              MOV      r6,r2                 ;748
000008  2820              CMP      r0,#0x20
00000a  d103              BNE      |L2.20|
                  |L2.12|
00000c  7870              LDRB     r0,[r6,#1]
00000e  1c76              ADDS     r6,r6,#1
000010  2820              CMP      r0,#0x20
000012  d0fb              BEQ      |L2.12|
                  |L2.20|
;;;753    	if (*path == '/') path++;			/* Strip heading separator if exist */
000014  b2c0              UXTB     r0,r0
000016  282f              CMP      r0,#0x2f
000018  d100              BNE      |L2.28|
00001a  1c76              ADDS     r6,r6,#1
                  |L2.28|
;;;754    	dj->sclust = 0;						/* Set start directory (always root dir) */
00001c  9802              LDR      r0,[sp,#8]
00001e  2200              MOVS     r2,#0
;;;755    
;;;756    	if ((BYTE)*path < ' ') {			/* Null path means the root directory */
000020  6082              STR      r2,[r0,#8]
000022  7833              LDRB     r3,[r6,#0]
000024  2001              MOVS     r0,#1
000026  4989              LDR      r1,|L2.588|
000028  2b20              CMP      r3,#0x20
00002a  d21a              BCS      |L2.98|
00002c  9b02              LDR      r3,[sp,#8]
00002e  6809              LDR      r1,[r1,#0]  ; FatFs
000030  801a              STRH     r2,[r3,#0]
000032  688b              LDR      r3,[r1,#8]
000034  2b00              CMP      r3,#0
;;;757    		res = dir_rewind(dj);
000036  d910              BLS      |L2.90|
000038  9b02              LDR      r3,[sp,#8]
00003a  6908              LDR      r0,[r1,#0x10]
00003c  60d8              STR      r0,[r3,#0xc]
00003e  688b              LDR      r3,[r1,#8]
000040  1e80              SUBS     r0,r0,#2
000042  1e9b              SUBS     r3,r3,#2
000044  4283              CMP      r3,r0
000046  d801              BHI      |L2.76|
000048  4610              MOV      r0,r2
00004a  e003              B        |L2.84|
                  |L2.76|
00004c  788b              LDRB     r3,[r1,#2]
00004e  4343              MULS     r3,r0,r3
000050  6948              LDR      r0,[r1,#0x14]
000052  1818              ADDS     r0,r3,r0
                  |L2.84|
000054  9902              LDR      r1,[sp,#8]
000056  6108              STR      r0,[r1,#0x10]
000058  4610              MOV      r0,r2
                  |L2.90|
;;;758    		dir[0] = 0;
00005a  9903              LDR      r1,[sp,#0xc]
00005c  700a              STRB     r2,[r1,#0]
;;;759    
;;;760    	} else {							/* Follow path */
;;;761    		for (;;) {
;;;762    			res = create_name(dj, &path);	/* Get a segment */
;;;763    			if (res != FR_OK) break;
;;;764    			res = dir_find(dj, dir);		/* Find it */
;;;765    			if (res != FR_OK) break;		/* Could not find the object */
;;;766    			if (dj->fn[11]) break;			/* Last segment match. Function completed. */
;;;767    			if (!(dir[DIR_Attr] & AM_DIR)) { /* Cannot follow path because it is a file */
;;;768    				res = FR_NO_FILE; break;
;;;769    			}
;;;770    			dj->sclust = get_clust(dir);	/* Follow next */
;;;771    		}
;;;772    	}
;;;773    
;;;774    	return res;
;;;775    }
00005e  b005              ADD      sp,sp,#0x14
000060  bdf0              POP      {r4-r7,pc}
                  |L2.98|
000062  9802              LDR      r0,[sp,#8]
000064  2120              MOVS     r1,#0x20
000066  6844              LDR      r4,[r0,#4]
000068  2200              MOVS     r2,#0
00006a  4623              MOV      r3,r4
00006c  7021              STRB     r1,[r4,#0]
00006e  2005              MOVS     r0,#5
                  |L2.112|
000070  7059              STRB     r1,[r3,#1]
000072  7099              STRB     r1,[r3,#2]
000074  1e40              SUBS     r0,r0,#1
000076  1c9b              ADDS     r3,r3,#2
000078  2800              CMP      r0,#0
00007a  d1f9              BNE      |L2.112|
00007c  4603              MOV      r3,r0
00007e  2508              MOVS     r5,#8
                  |L2.128|
000080  5c31              LDRB     r1,[r6,r0]
000082  1c40              ADDS     r0,r0,#1
000084  b2c0              UXTB     r0,r0
000086  2920              CMP      r1,#0x20
000088  d909              BLS      |L2.158|
00008a  292f              CMP      r1,#0x2f
00008c  d01f              BEQ      |L2.206|
00008e  292e              CMP      r1,#0x2e
000090  d001              BEQ      |L2.150|
000092  42ab              CMP      r3,r5
000094  d30b              BCC      |L2.174|
                  |L2.150|
000096  2d08              CMP      r5,#8
000098  d101              BNE      |L2.158|
00009a  292e              CMP      r1,#0x2e
00009c  d004              BEQ      |L2.168|
                  |L2.158|
00009e  1836              ADDS     r6,r6,r0
0000a0  2920              CMP      r1,#0x20
0000a2  d815              BHI      |L2.208|
0000a4  2001              MOVS     r0,#1
0000a6  e014              B        |L2.210|
                  |L2.168|
0000a8  2308              MOVS     r3,#8
0000aa  250b              MOVS     r5,#0xb
0000ac  e7e8              B        |L2.128|
                  |L2.174|
0000ae  2980              CMP      r1,#0x80
0000b0  d303              BCC      |L2.186|
0000b2  4f67              LDR      r7,|L2.592|
0000b4  1879              ADDS     r1,r7,r1
0000b6  3980              SUBS     r1,r1,#0x80
0000b8  7809              LDRB     r1,[r1,#0]
                  |L2.186|
0000ba  460f              MOV      r7,r1
0000bc  3f61              SUBS     r7,r7,#0x61
0000be  2f19              CMP      r7,#0x19
0000c0  d801              BHI      |L2.198|
0000c2  3920              SUBS     r1,r1,#0x20
0000c4  b2c9              UXTB     r1,r1
                  |L2.198|
0000c6  54e1              STRB     r1,[r4,r3]
0000c8  1c5b              ADDS     r3,r3,#1
0000ca  b2db              UXTB     r3,r3
0000cc  e7d8              B        |L2.128|
                  |L2.206|
0000ce  1836              ADDS     r6,r6,r0
                  |L2.208|
0000d0  2000              MOVS     r0,#0
                  |L2.210|
0000d2  72e0              STRB     r0,[r4,#0xb]
0000d4  4b5d              LDR      r3,|L2.588|
0000d6  9d02              LDR      r5,[sp,#8]
0000d8  9f03              LDR      r7,[sp,#0xc]
0000da  6819              LDR      r1,[r3,#0]  ; FatFs
0000dc  802a              STRH     r2,[r5,#0]
0000de  68a8              LDR      r0,[r5,#8]
0000e0  2801              CMP      r0,#1
0000e2  d002              BEQ      |L2.234|
0000e4  688c              LDR      r4,[r1,#8]            ;763
0000e6  4284              CMP      r4,r0                 ;763
0000e8  d802              BHI      |L2.240|
                  |L2.234|
0000ea  2001              MOVS     r0,#1                 ;763
                  |L2.236|
0000ec  b005              ADD      sp,sp,#0x14
0000ee  bdf0              POP      {r4-r7,pc}
                  |L2.240|
0000f0  2800              CMP      r0,#0
0000f2  d100              BNE      |L2.246|
0000f4  6908              LDR      r0,[r1,#0x10]
                  |L2.246|
0000f6  60e8              STR      r0,[r5,#0xc]
0000f8  688c              LDR      r4,[r1,#8]
0000fa  1e80              SUBS     r0,r0,#2
0000fc  1ea4              SUBS     r4,r4,#2
0000fe  4284              CMP      r4,r0
000100  d801              BHI      |L2.262|
000102  4610              MOV      r0,r2
000104  e003              B        |L2.270|
                  |L2.262|
000106  788c              LDRB     r4,[r1,#2]
000108  4344              MULS     r4,r0,r4
00010a  6948              LDR      r0,[r1,#0x14]
00010c  1820              ADDS     r0,r4,r0
                  |L2.270|
00010e  6128              STR      r0,[r5,#0x10]
                  |L2.272|
000110  7828              LDRB     r0,[r5,#0]
000112  2320              MOVS     r3,#0x20
000114  0700              LSLS     r0,r0,#28
000116  0dc2              LSRS     r2,r0,#23
000118  4638              MOV      r0,r7
00011a  6929              LDR      r1,[r5,#0x10]
00011c  f7fffffe          BL       disk_readp
000120  2800              CMP      r0,#0
000122  d15b              BNE      |L2.476|
000124  4684              MOV      r12,r0
000126  7838              LDRB     r0,[r7,#0]
000128  2800              CMP      r0,#0
00012a  d07b              BEQ      |L2.548|
00012c  7af8              LDRB     r0,[r7,#0xb]
00012e  0700              LSLS     r0,r0,#28
000130  d40e              BMI      |L2.336|
000132  463c              MOV      r4,r7
000134  210a              MOVS     r1,#0xa
000136  6868              LDR      r0,[r5,#4]
000138  e001              B        |L2.318|
                  |L2.314|
00013a  1e49              SUBS     r1,r1,#1
00013c  d306              BCC      |L2.332|
                  |L2.318|
00013e  7822              LDRB     r2,[r4,#0]
000140  7803              LDRB     r3,[r0,#0]
000142  1c40              ADDS     r0,r0,#1
000144  1c64              ADDS     r4,r4,#1
000146  1ad3              SUBS     r3,r2,r3
000148  d0f7              BEQ      |L2.314|
00014a  e001              B        |L2.336|
                  |L2.332|
00014c  2b00              CMP      r3,#0
00014e  d05f              BEQ      |L2.528|
                  |L2.336|
000150  483e              LDR      r0,|L2.588|
000152  6803              LDR      r3,[r0,#0]  ; FatFs
000154  9301              STR      r3,[sp,#4]
000156  8829              LDRH     r1,[r5,#0]
000158  1c49              ADDS     r1,r1,#1
00015a  040c              LSLS     r4,r1,#16
00015c  0c24              LSRS     r4,r4,#16
00015e  d01e              BEQ      |L2.414|
000160  692a              LDR      r2,[r5,#0x10]
000162  2a00              CMP      r2,#0
000164  d01b              BEQ      |L2.414|
000166  0721              LSLS     r1,r4,#28
000168  d14f              BNE      |L2.522|
00016a  1c52              ADDS     r2,r2,#1
00016c  612a              STR      r2,[r5,#0x10]
00016e  68e9              LDR      r1,[r5,#0xc]
000170  468c              MOV      r12,r1
000172  2900              CMP      r1,#0
000174  d00f              BEQ      |L2.406|
000176  9a01              LDR      r2,[sp,#4]
000178  0921              LSRS     r1,r4,#4
00017a  7892              LDRB     r2,[r2,#2]
00017c  1e52              SUBS     r2,r2,#1
00017e  4211              TST      r1,r2
000180  d143              BNE      |L2.522|
000182  4662              MOV      r2,r12
000184  2a02              CMP      r2,#2
000186  d329              BCC      |L2.476|
000188  6898              LDR      r0,[r3,#8]
00018a  4290              CMP      r0,r2
00018c  d926              BLS      |L2.476|
00018e  7818              LDRB     r0,[r3,#0]
000190  2803              CMP      r0,#3
000192  d123              BNE      |L2.476|
000194  e005              B        |L2.418|
                  |L2.406|
000196  9801              LDR      r0,[sp,#4]
000198  8880              LDRH     r0,[r0,#4]
00019a  42a0              CMP      r0,r4
00019c  d835              BHI      |L2.522|
                  |L2.414|
00019e  2003              MOVS     r0,#3
0001a0  e01d              B        |L2.478|
                  |L2.418|
0001a2  68d8              LDR      r0,[r3,#0xc]
0001a4  09d1              LSRS     r1,r2,#7
0001a6  1841              ADDS     r1,r0,r1
0001a8  0650              LSLS     r0,r2,#25
0001aa  0dc2              LSRS     r2,r0,#23
0001ac  2304              MOVS     r3,#4
0001ae  4668              MOV      r0,sp
0001b0  f7fffffe          BL       disk_readp
0001b4  2800              CMP      r0,#0
0001b6  d111              BNE      |L2.476|
0001b8  4668              MOV      r0,sp
0001ba  78c0              LDRB     r0,[r0,#3]
0001bc  0201              LSLS     r1,r0,#8
0001be  4668              MOV      r0,sp
0001c0  7880              LDRB     r0,[r0,#2]
0001c2  4301              ORRS     r1,r1,r0
0001c4  4668              MOV      r0,sp
0001c6  7840              LDRB     r0,[r0,#1]
0001c8  0209              LSLS     r1,r1,#8
0001ca  4301              ORRS     r1,r1,r0
0001cc  4668              MOV      r0,sp
0001ce  7800              LDRB     r0,[r0,#0]
0001d0  0209              LSLS     r1,r1,#8
0001d2  4301              ORRS     r1,r1,r0
0001d4  0108              LSLS     r0,r1,#4
0001d6  0900              LSRS     r0,r0,#4
0001d8  2801              CMP      r0,#1
0001da  d803              BHI      |L2.484|
                  |L2.476|
0001dc  2001              MOVS     r0,#1
                  |L2.478|
0001de  2800              CMP      r0,#0                 ;765
                  |L2.480|
0001e0  d184              BNE      |L2.236|
0001e2  e016              B        |L2.530|
                  |L2.484|
0001e4  9901              LDR      r1,[sp,#4]            ;765
0001e6  6889              LDR      r1,[r1,#8]            ;765
0001e8  4281              CMP      r1,r0                 ;765
0001ea  d91b              BLS      |L2.548|
0001ec  4917              LDR      r1,|L2.588|
0001ee  60e8              STR      r0,[r5,#0xc]          ;765
0001f0  6809              LDR      r1,[r1,#0]            ;765  ; FatFs
0001f2  1e80              SUBS     r0,r0,#2              ;765
0001f4  688a              LDR      r2,[r1,#8]            ;765
0001f6  1e92              SUBS     r2,r2,#2              ;765
0001f8  4282              CMP      r2,r0                 ;765
0001fa  d801              BHI      |L2.512|
0001fc  2000              MOVS     r0,#0                 ;765
0001fe  e003              B        |L2.520|
                  |L2.512|
000200  788a              LDRB     r2,[r1,#2]            ;765
000202  4342              MULS     r2,r0,r2              ;765
000204  6948              LDR      r0,[r1,#0x14]         ;765
000206  1810              ADDS     r0,r2,r0              ;765
                  |L2.520|
000208  6128              STR      r0,[r5,#0x10]         ;765
                  |L2.522|
00020a  802c              STRH     r4,[r5,#0]            ;765
00020c  e780              B        |L2.272|
00020e  e009              B        |L2.548|
                  |L2.528|
000210  4660              MOV      r0,r12                ;765
                  |L2.530|
000212  9902              LDR      r1,[sp,#8]            ;766
000214  6849              LDR      r1,[r1,#4]            ;766
000216  7ac9              LDRB     r1,[r1,#0xb]          ;766
000218  2900              CMP      r1,#0                 ;766
00021a  d1e1              BNE      |L2.480|
00021c  9803              LDR      r0,[sp,#0xc]          ;767
00021e  7ac0              LDRB     r0,[r0,#0xb]          ;767
000220  06c0              LSLS     r0,r0,#27             ;767
000222  d402              BMI      |L2.554|
                  |L2.548|
000224  2003              MOVS     r0,#3                 ;768
000226  b005              ADD      sp,sp,#0x14
000228  bdf0              POP      {r4-r7,pc}
                  |L2.554|
00022a  9803              LDR      r0,[sp,#0xc]
00022c  9903              LDR      r1,[sp,#0xc]
00022e  7d40              LDRB     r0,[r0,#0x15]
000230  7d09              LDRB     r1,[r1,#0x14]
000232  0200              LSLS     r0,r0,#8
000234  4308              ORRS     r0,r0,r1
000236  0401              LSLS     r1,r0,#16
000238  9803              LDR      r0,[sp,#0xc]
00023a  9a03              LDR      r2,[sp,#0xc]
00023c  7ec0              LDRB     r0,[r0,#0x1b]
00023e  7e92              LDRB     r2,[r2,#0x1a]
000240  0200              LSLS     r0,r0,#8
000242  4310              ORRS     r0,r0,r2
000244  4308              ORRS     r0,r0,r1
000246  9902              LDR      r1,[sp,#8]            ;770
000248  6088              STR      r0,[r1,#8]            ;770
00024a  e70a              B        |L2.98|
;;;776    
                          ENDP

                  |L2.588|
                          DCD      ||.data||
                  |L2.592|
                          DCD      ||.constdata||

                          AREA ||i.pf_lseek||, CODE, READONLY, ALIGN=2

                  pf_lseek PROC
;;;1057   
;;;1058   FRESULT pf_lseek (
000000  b5f0              PUSH     {r4-r7,lr}
;;;1059   	DWORD ofs		/* File pointer from top of file */
;;;1060   )
;;;1061   {
000002  4605              MOV      r5,r0
;;;1062   	CLUST clst;
;;;1063   	DWORD bcs, sect, ifptr;
;;;1064   	FATFS *fs = FatFs;
000004  4842              LDR      r0,|L3.272|
000006  b083              SUB      sp,sp,#0xc            ;1061
;;;1065   
;;;1066   
;;;1067   	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
000008  6804              LDR      r4,[r0,#0]  ; FatFs
00000a  2c00              CMP      r4,#0
00000c  d022              BEQ      |L3.84|
;;;1068   	if (!(fs->flag & FA_OPENED)) return FR_NOT_OPENED;	/* Check if opened */
00000e  7860              LDRB     r0,[r4,#1]
000010  07c0              LSLS     r0,r0,#31
000012  d022              BEQ      |L3.90|
;;;1069   
;;;1070   	if (ofs > fs->fsize) ofs = fs->fsize;	/* Clip offset with the file size */
000014  69e0              LDR      r0,[r4,#0x1c]
000016  42a8              CMP      r0,r5
000018  d377              BCC      |L3.266|
                  |L3.26|
;;;1071   	ifptr = fs->fptr;
;;;1072   	fs->fptr = 0;
00001a  2000              MOVS     r0,#0
00001c  69a6              LDR      r6,[r4,#0x18]
;;;1073   	if (ofs > 0) {
00001e  61a0              STR      r0,[r4,#0x18]
000020  2d00              CMP      r5,#0
000022  d069              BEQ      |L3.248|
;;;1074   		bcs = (DWORD)fs->csize * 512;		/* Cluster size (byte) */
000024  78a0              LDRB     r0,[r4,#2]
000026  0240              LSLS     r0,r0,#9
;;;1075   		if (ifptr > 0 &&
000028  9000              STR      r0,[sp,#0]
00002a  2e00              CMP      r6,#0
00002c  d018              BEQ      |L3.96|
00002e  4601              MOV      r1,r0
000030  1e68              SUBS     r0,r5,#1
000032  f7fffffe          BL       __aeabi_uidivmod
000036  4607              MOV      r7,r0
000038  1e70              SUBS     r0,r6,#1
00003a  9900              LDR      r1,[sp,#0]
00003c  f7fffffe          BL       __aeabi_uidivmod
000040  4287              CMP      r7,r0
000042  d30d              BCC      |L3.96|
;;;1076   			(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
;;;1077   			fs->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
000044  9800              LDR      r0,[sp,#0]
000046  1e76              SUBS     r6,r6,#1
000048  1e40              SUBS     r0,r0,#1
00004a  4386              BICS     r6,r6,r0
;;;1078   			ofs -= fs->fptr;
;;;1079   			clst = fs->curr_clust;
00004c  61a6              STR      r6,[r4,#0x18]
00004e  1bad              SUBS     r5,r5,r6              ;1078
000050  6a62              LDR      r2,[r4,#0x24]
000052  e007              B        |L3.100|
                  |L3.84|
000054  2005              MOVS     r0,#5                 ;1067
;;;1080   		} else {							/* When seek to back cluster, */
;;;1081   			clst = fs->org_clust;			/* start from the first cluster */
;;;1082   			fs->curr_clust = clst;
;;;1083   		}
;;;1084   		while (ofs > bcs) {				/* Cluster following loop */
;;;1085   			clst = get_fat(clst);		/* Follow cluster chain */
;;;1086   			if (clst <= 1 || clst >= fs->n_fatent) ABORT(FR_DISK_ERR);
;;;1087   			fs->curr_clust = clst;
;;;1088   			fs->fptr += bcs;
;;;1089   			ofs -= bcs;
;;;1090   		}
;;;1091   		fs->fptr += ofs;
;;;1092   		sect = clust2sect(clst);		/* Current sector */
;;;1093   		if (!sect) ABORT(FR_DISK_ERR);
;;;1094   		fs->dsect = sect + (fs->fptr / 512 & (fs->csize - 1));
;;;1095   	}
;;;1096   
;;;1097   	return FR_OK;
;;;1098   }
000056  b003              ADD      sp,sp,#0xc
000058  bdf0              POP      {r4-r7,pc}
                  |L3.90|
00005a  2004              MOVS     r0,#4                 ;1068
00005c  b003              ADD      sp,sp,#0xc
00005e  bdf0              POP      {r4-r7,pc}
                  |L3.96|
000060  6a22              LDR      r2,[r4,#0x20]         ;1082
000062  6262              STR      r2,[r4,#0x24]         ;1082
                  |L3.100|
000064  9800              LDR      r0,[sp,#0]            ;1084
000066  4285              CMP      r5,r0                 ;1084
000068  d931              BLS      |L3.206|
00006a  4e29              LDR      r6,|L3.272|
                  |L3.108|
00006c  2a02              CMP      r2,#2                 ;1064
00006e  6830              LDR      r0,[r6,#0]            ;1064  ; FatFs
000070  d346              BCC      |L3.256|
000072  6881              LDR      r1,[r0,#8]            ;1085
000074  4291              CMP      r1,r2                 ;1085
000076  d943              BLS      |L3.256|
000078  7801              LDRB     r1,[r0,#0]            ;1085
00007a  2903              CMP      r1,#3                 ;1085
00007c  d140              BNE      |L3.256|
00007e  68c0              LDR      r0,[r0,#0xc]          ;1085
000080  09d1              LSRS     r1,r2,#7              ;1085
000082  1841              ADDS     r1,r0,r1              ;1085
000084  0650              LSLS     r0,r2,#25             ;1085
000086  0dc2              LSRS     r2,r0,#23             ;1085
000088  2304              MOVS     r3,#4                 ;1085
00008a  a801              ADD      r0,sp,#4              ;1085
00008c  f7fffffe          BL       disk_readp
000090  2800              CMP      r0,#0                 ;1085
000092  d135              BNE      |L3.256|
000094  4669              MOV      r1,sp                 ;1085
000096  79c8              LDRB     r0,[r1,#7]            ;1085
000098  7989              LDRB     r1,[r1,#6]            ;1085
00009a  0200              LSLS     r0,r0,#8              ;1085
00009c  4308              ORRS     r0,r0,r1              ;1085
00009e  4669              MOV      r1,sp                 ;1085
0000a0  7949              LDRB     r1,[r1,#5]            ;1085
0000a2  0200              LSLS     r0,r0,#8              ;1085
0000a4  4308              ORRS     r0,r0,r1              ;1085
0000a6  4669              MOV      r1,sp                 ;1085
0000a8  7909              LDRB     r1,[r1,#4]            ;1085
0000aa  0200              LSLS     r0,r0,#8              ;1085
0000ac  4308              ORRS     r0,r0,r1              ;1085
0000ae  0102              LSLS     r2,r0,#4              ;1085
0000b0  0912              LSRS     r2,r2,#4              ;1085
0000b2  2a01              CMP      r2,#1                 ;1086
0000b4  d924              BLS      |L3.256|
0000b6  68a0              LDR      r0,[r4,#8]            ;1086
0000b8  4290              CMP      r0,r2                 ;1086
0000ba  d921              BLS      |L3.256|
0000bc  6262              STR      r2,[r4,#0x24]         ;1088
0000be  69a1              LDR      r1,[r4,#0x18]         ;1088
0000c0  9800              LDR      r0,[sp,#0]            ;1088
0000c2  1808              ADDS     r0,r1,r0              ;1088
0000c4  61a0              STR      r0,[r4,#0x18]         ;1089
0000c6  9800              LDR      r0,[sp,#0]            ;1089
0000c8  1a2d              SUBS     r5,r5,r0              ;1089
0000ca  4285              CMP      r5,r0                 ;1089
0000cc  d8ce              BHI      |L3.108|
                  |L3.206|
0000ce  69a0              LDR      r0,[r4,#0x18]         ;1091
0000d0  1e92              SUBS     r2,r2,#2              ;1091
0000d2  1941              ADDS     r1,r0,r5              ;1091
0000d4  480e              LDR      r0,|L3.272|
0000d6  61a1              STR      r1,[r4,#0x18]         ;1091
0000d8  6800              LDR      r0,[r0,#0]            ;1091  ; FatFs
0000da  6883              LDR      r3,[r0,#8]            ;1091
0000dc  1e9b              SUBS     r3,r3,#2              ;1091
0000de  4293              CMP      r3,r2                 ;1091
0000e0  d90e              BLS      |L3.256|
0000e2  7883              LDRB     r3,[r0,#2]            ;1091
0000e4  6940              LDR      r0,[r0,#0x14]         ;1091
0000e6  4353              MULS     r3,r2,r3              ;1091
0000e8  1818              ADDS     r0,r3,r0              ;1091
0000ea  d009              BEQ      |L3.256|
0000ec  78a2              LDRB     r2,[r4,#2]            ;1094
0000ee  0a49              LSRS     r1,r1,#9              ;1094
0000f0  1e52              SUBS     r2,r2,#1              ;1094
0000f2  4011              ANDS     r1,r1,r2              ;1094
0000f4  1808              ADDS     r0,r1,r0              ;1094
0000f6  62a0              STR      r0,[r4,#0x28]         ;1094
                  |L3.248|
0000f8  2000              MOVS     r0,#0                 ;1097
0000fa  b003              ADD      sp,sp,#0xc
0000fc  bdf0              POP      {r4-r7,pc}
0000fe  e004              B        |L3.266|
                  |L3.256|
000100  2000              MOVS     r0,#0                 ;1093
000102  7060              STRB     r0,[r4,#1]            ;1093
000104  2001              MOVS     r0,#1                 ;1093
000106  b003              ADD      sp,sp,#0xc
000108  bdf0              POP      {r4-r7,pc}
                  |L3.266|
00010a  4605              MOV      r5,r0                 ;1070
00010c  e785              B        |L3.26|
;;;1099   #endif
                          ENDP

00010e  0000              DCW      0x0000
                  |L3.272|
                          DCD      ||.data||

                          AREA ||i.pf_mount||, CODE, READONLY, ALIGN=2

                  pf_mount PROC
;;;818    /*-----------------------------------------------------------------------*/
;;;819    FRESULT pf_mount (
000000  b5f0              PUSH     {r4-r7,lr}
;;;820    	FATFS *fs		/* Pointer to new file system object */
;;;821    )
;;;822    {
000002  4605              MOV      r5,r0
;;;823    	BYTE fmt, buf[36];
;;;824    	DWORD bsect, fsize, tsect, mclst;
;;;825    
;;;826    	FatFs = 0;
000004  496b              LDR      r1,|L4.436|
000006  b08b              SUB      sp,sp,#0x2c           ;822
000008  2000              MOVS     r0,#0
;;;827    	if (disk_initialize() & STA_NOINIT) {	/* Check if the drive is ready or not */
00000a  6008              STR      r0,[r1,#0]  ; FatFs
00000c  f7fffffe          BL       disk_initialize
000010  07c0              LSLS     r0,r0,#31
000012  d002              BEQ      |L4.26|
;;;828    		return FR_NOT_READY;
000014  2002              MOVS     r0,#2
;;;829    	}
;;;830    	
;;;831    	/* Search FAT partition on the drive */
;;;832    	bsect = 0;
;;;833    	fmt = check_fs(buf, bsect);			/* Check sector 0 as an SFD format */
;;;834    	
;;;835    	if (fmt == 1) {						/* Not an FAT boot record, it may be FDISK format */
;;;836    		/* Check a partition listed in top of the partition table */
;;;837    		if (disk_readp(buf, bsect, MBR_Table, 16)) {	/* 1st partition entry */
;;;838    			fmt = 3;
;;;839    		} else {
;;;840    			if (buf[4]) {					/* Is the partition existing? */
;;;841    				bsect = ld_dword(&buf[8]);	/* Partition offset in LBA */
;;;842    				fmt = check_fs(buf, bsect);	/* Check the partition */
;;;843    			}
;;;844    		}
;;;845    	}
;;;846    	if (fmt == 3) return FR_DISK_ERR;
;;;847    	if (fmt) return FR_NO_FILESYSTEM;	/* No valid FAT patition is found */
;;;848    
;;;849    	/* Initialize the file system object */
;;;850    	if (disk_readp(buf, bsect, 13, sizeof (buf))) return FR_DISK_ERR;
;;;851    
;;;852    	fsize = ld_word(buf+BPB_FATSz16-13);				/* Number of sectors per FAT */
;;;853    	if (!fsize) fsize = ld_dword(buf+BPB_FATSz32-13);
;;;854    
;;;855    	fsize *= buf[BPB_NumFATs-13];						/* Number of sectors in FAT area */
;;;856    	fs->fatbase = bsect + ld_word(buf+BPB_RsvdSecCnt-13); /* FAT start sector (lba) */
;;;857    	fs->csize = buf[BPB_SecPerClus-13];					/* Number of sectors per cluster */
;;;858    	fs->n_rootdir = ld_word(buf+BPB_RootEntCnt-13);		/* Nmuber of root directory entries */
;;;859    	tsect = ld_word(buf+BPB_TotSec16-13);				/* Number of sectors on the file system */
;;;860    	if (!tsect) tsect = ld_dword(buf+BPB_TotSec32-13);
;;;861    	mclst = (tsect						/* Last cluster# + 1 */
;;;862    		- ld_word(buf+BPB_RsvdSecCnt-13) - fsize - fs->n_rootdir / 16
;;;863    		) / fs->csize + 2;
;;;864    	fs->n_fatent = (CLUST)mclst;
;;;865    
;;;866    	fmt = 0;							/* Determine the FAT sub type */
;;;867    	if (PF_FS_FAT12 && mclst < 0xFF7) fmt = FS_FAT12;
;;;868    	if (PF_FS_FAT16 && mclst >= 0xFF8 && mclst < 0xFFF7) fmt = FS_FAT16;
;;;869    	if (PF_FS_FAT32 && mclst >= 0xFFF7) fmt = FS_FAT32;
;;;870    	if (!fmt) return FR_NO_FILESYSTEM;
;;;871    	fs->fs_type = fmt;
;;;872    
;;;873    	if (_FS_32ONLY || (PF_FS_FAT32 && fmt == FS_FAT32)) {
;;;874    		fs->dirbase = ld_dword(buf+(BPB_RootClus-13));	/* Root directory start cluster */
;;;875    	} else {
;;;876    		fs->dirbase = fs->fatbase + fsize;				/* Root directory start sector (lba) */
;;;877    	}
;;;878    	fs->database = fs->fatbase + fsize + fs->n_rootdir / 16;	/* Data start sector (lba) */
;;;879    
;;;880    	fs->flag = 0;
;;;881    	FatFs = fs;
;;;882    
;;;883    	return FR_OK;
;;;884    }
000016  b00b              ADD      sp,sp,#0x2c
000018  bdf0              POP      {r4-r7,pc}
                  |L4.26|
00001a  2400              MOVS     r4,#0                 ;832
00001c  466f              MOV      r7,sp                 ;833
00001e  22ff              MOVS     r2,#0xff              ;833
000020  2302              MOVS     r3,#2                 ;833
000022  32ff              ADDS     r2,r2,#0xff           ;833
000024  4621              MOV      r1,r4                 ;833
000026  4638              MOV      r0,r7                 ;833
000028  f7fffffe          BL       disk_readp
00002c  2800              CMP      r0,#0                 ;833
00002e  d159              BNE      |L4.228|
000030  4669              MOV      r1,sp                 ;833
000032  7848              LDRB     r0,[r1,#1]            ;833
000034  7809              LDRB     r1,[r1,#0]            ;833
000036  0200              LSLS     r0,r0,#8              ;833
000038  4e5f              LDR      r6,|L4.440|
00003a  4308              ORRS     r0,r0,r1              ;833
00003c  42b0              CMP      r0,r6                 ;833
00003e  d17d              BNE      |L4.316|
000040  2302              MOVS     r3,#2                 ;833
000042  2252              MOVS     r2,#0x52              ;833
000044  4621              MOV      r1,r4                 ;833
000046  4638              MOV      r0,r7                 ;833
000048  f7fffffe          BL       disk_readp
00004c  4f5b              LDR      r7,|L4.444|
00004e  2800              CMP      r0,#0                 ;833
000050  d106              BNE      |L4.96|
000052  4669              MOV      r1,sp                 ;833
000054  7848              LDRB     r0,[r1,#1]            ;833
000056  7809              LDRB     r1,[r1,#0]            ;833
000058  0200              LSLS     r0,r0,#8              ;833
00005a  4308              ORRS     r0,r0,r1              ;833
00005c  42b8              CMP      r0,r7                 ;833
00005e  d039              BEQ      |L4.212|
                  |L4.96|
000060  22ff              MOVS     r2,#0xff              ;837
000062  2310              MOVS     r3,#0x10              ;837
000064  32bf              ADDS     r2,r2,#0xbf           ;837
000066  4621              MOV      r1,r4                 ;837
000068  4668              MOV      r0,sp                 ;837
00006a  f7fffffe          BL       disk_readp
00006e  2800              CMP      r0,#0                 ;837
000070  d138              BNE      |L4.228|
000072  4668              MOV      r0,sp                 ;840
000074  7900              LDRB     r0,[r0,#4]            ;840
000076  2800              CMP      r0,#0                 ;840
000078  d060              BEQ      |L4.316|
00007a  4669              MOV      r1,sp                 ;840
00007c  7ac8              LDRB     r0,[r1,#0xb]          ;840
00007e  7a89              LDRB     r1,[r1,#0xa]          ;840
000080  0200              LSLS     r0,r0,#8              ;840
000082  4308              ORRS     r0,r0,r1              ;840
000084  4669              MOV      r1,sp                 ;840
000086  7a49              LDRB     r1,[r1,#9]            ;840
000088  0200              LSLS     r0,r0,#8              ;840
00008a  4308              ORRS     r0,r0,r1              ;840
00008c  0204              LSLS     r4,r0,#8              ;840
00008e  4669              MOV      r1,sp                 ;840
000090  7a08              LDRB     r0,[r1,#8]            ;840
000092  22ff              MOVS     r2,#0xff              ;840
000094  4304              ORRS     r4,r4,r0              ;840
000096  4608              MOV      r0,r1                 ;842
000098  9109              STR      r1,[sp,#0x24]         ;842
00009a  2302              MOVS     r3,#2                 ;842
00009c  32ff              ADDS     r2,r2,#0xff           ;842
00009e  4621              MOV      r1,r4                 ;842
0000a0  f7fffffe          BL       disk_readp
0000a4  2800              CMP      r0,#0                 ;842
0000a6  d11d              BNE      |L4.228|
0000a8  4669              MOV      r1,sp                 ;842
0000aa  7848              LDRB     r0,[r1,#1]            ;842
0000ac  7809              LDRB     r1,[r1,#0]            ;842
0000ae  0200              LSLS     r0,r0,#8              ;842
0000b0  4308              ORRS     r0,r0,r1              ;842
0000b2  42b0              CMP      r0,r6                 ;842
0000b4  d17b              BNE      |L4.430|
0000b6  2302              MOVS     r3,#2                 ;842
0000b8  2252              MOVS     r2,#0x52              ;842
0000ba  4621              MOV      r1,r4                 ;842
0000bc  9809              LDR      r0,[sp,#0x24]         ;842
0000be  f7fffffe          BL       disk_readp
0000c2  2800              CMP      r0,#0                 ;842
0000c4  d173              BNE      |L4.430|
0000c6  4669              MOV      r1,sp                 ;842
0000c8  7848              LDRB     r0,[r1,#1]            ;842
0000ca  7809              LDRB     r1,[r1,#0]            ;842
0000cc  0200              LSLS     r0,r0,#8              ;842
0000ce  4308              ORRS     r0,r0,r1              ;842
0000d0  42b8              CMP      r0,r7                 ;842
0000d2  d16c              BNE      |L4.430|
                  |L4.212|
0000d4  2324              MOVS     r3,#0x24              ;850
0000d6  220d              MOVS     r2,#0xd               ;850
0000d8  4621              MOV      r1,r4                 ;850
0000da  4668              MOV      r0,sp                 ;850
0000dc  f7fffffe          BL       disk_readp
0000e0  2800              CMP      r0,#0                 ;850
0000e2  d002              BEQ      |L4.234|
                  |L4.228|
0000e4  2001              MOVS     r0,#1                 ;850
0000e6  b00b              ADD      sp,sp,#0x2c
0000e8  bdf0              POP      {r4-r7,pc}
                  |L4.234|
0000ea  4669              MOV      r1,sp
0000ec  7a88              LDRB     r0,[r1,#0xa]
0000ee  7a49              LDRB     r1,[r1,#9]
0000f0  0200              LSLS     r0,r0,#8
0000f2  4308              ORRS     r0,r0,r1
0000f4  d10c              BNE      |L4.272|
0000f6  4669              MOV      r1,sp                 ;853
0000f8  7e88              LDRB     r0,[r1,#0x1a]         ;853
0000fa  7e49              LDRB     r1,[r1,#0x19]         ;853
0000fc  0200              LSLS     r0,r0,#8              ;853
0000fe  4308              ORRS     r0,r0,r1              ;853
000100  4669              MOV      r1,sp                 ;853
000102  7e09              LDRB     r1,[r1,#0x18]         ;853
000104  0200              LSLS     r0,r0,#8              ;853
000106  4308              ORRS     r0,r0,r1              ;853
000108  4669              MOV      r1,sp                 ;853
00010a  7dc9              LDRB     r1,[r1,#0x17]         ;853
00010c  0200              LSLS     r0,r0,#8              ;853
00010e  4308              ORRS     r0,r0,r1              ;853
                  |L4.272|
000110  466b              MOV      r3,sp                 ;855
000112  78de              LDRB     r6,[r3,#3]            ;855
000114  7859              LDRB     r1,[r3,#1]            ;855
000116  4346              MULS     r6,r0,r6              ;855
000118  7898              LDRB     r0,[r3,#2]            ;855
00011a  0200              LSLS     r0,r0,#8              ;855
00011c  4308              ORRS     r0,r0,r1              ;855
00011e  1904              ADDS     r4,r0,r4              ;856
000120  60ec              STR      r4,[r5,#0xc]          ;857
000122  7819              LDRB     r1,[r3,#0]            ;857
000124  70a9              STRB     r1,[r5,#2]            ;857
000126  7958              LDRB     r0,[r3,#5]            ;857
000128  791a              LDRB     r2,[r3,#4]            ;857
00012a  0200              LSLS     r0,r0,#8              ;857
00012c  4310              ORRS     r0,r0,r2              ;857
00012e  80a8              STRH     r0,[r5,#4]            ;858
000130  79da              LDRB     r2,[r3,#7]            ;858
000132  799b              LDRB     r3,[r3,#6]            ;858
000134  0212              LSLS     r2,r2,#8              ;858
000136  431a              ORRS     r2,r2,r3              ;858
000138  d10e              BNE      |L4.344|
00013a  e000              B        |L4.318|
                  |L4.316|
00013c  e037              B        |L4.430|
                  |L4.318|
00013e  466b              MOV      r3,sp                 ;860
000140  7d9a              LDRB     r2,[r3,#0x16]         ;860
000142  7d5b              LDRB     r3,[r3,#0x15]         ;860
000144  0212              LSLS     r2,r2,#8              ;860
000146  431a              ORRS     r2,r2,r3              ;860
000148  466b              MOV      r3,sp                 ;860
00014a  7d1b              LDRB     r3,[r3,#0x14]         ;860
00014c  0212              LSLS     r2,r2,#8              ;860
00014e  431a              ORRS     r2,r2,r3              ;860
000150  466b              MOV      r3,sp                 ;860
000152  7cdb              LDRB     r3,[r3,#0x13]         ;860
000154  0212              LSLS     r2,r2,#8              ;860
000156  431a              ORRS     r2,r2,r3              ;860
                  |L4.344|
000158  466f              MOV      r7,sp                 ;860
00015a  78bb              LDRB     r3,[r7,#2]            ;860
00015c  787f              LDRB     r7,[r7,#1]            ;860
00015e  021b              LSLS     r3,r3,#8              ;860
000160  433b              ORRS     r3,r3,r7              ;860
000162  1ad2              SUBS     r2,r2,r3              ;861
000164  1b92              SUBS     r2,r2,r6              ;861
000166  0907              LSRS     r7,r0,#4              ;861
000168  1bd0              SUBS     r0,r2,r7              ;861
00016a  f7fffffe          BL       __aeabi_uidivmod
00016e  1c80              ADDS     r0,r0,#2              ;861
000170  4913              LDR      r1,|L4.448|
000172  60a8              STR      r0,[r5,#8]            ;869
000174  4288              CMP      r0,r1                 ;869
000176  d31a              BCC      |L4.430|
000178  2003              MOVS     r0,#3                 ;869
00017a  7028              STRB     r0,[r5,#0]            ;871
00017c  a808              ADD      r0,sp,#0x20           ;871
00017e  7880              LDRB     r0,[r0,#2]            ;871
000180  0201              LSLS     r1,r0,#8              ;871
000182  a808              ADD      r0,sp,#0x20           ;871
000184  7840              LDRB     r0,[r0,#1]            ;871
000186  4301              ORRS     r1,r1,r0              ;871
000188  a808              ADD      r0,sp,#0x20           ;871
00018a  7800              LDRB     r0,[r0,#0]            ;871
00018c  0209              LSLS     r1,r1,#8              ;871
00018e  4301              ORRS     r1,r1,r0              ;871
000190  4668              MOV      r0,sp                 ;871
000192  7fc0              LDRB     r0,[r0,#0x1f]         ;871
000194  0209              LSLS     r1,r1,#8              ;871
000196  4301              ORRS     r1,r1,r0              ;871
000198  19b8              ADDS     r0,r7,r6              ;878
00019a  1820              ADDS     r0,r4,r0              ;878
00019c  6129              STR      r1,[r5,#0x10]         ;880
00019e  6168              STR      r0,[r5,#0x14]         ;880
0001a0  2000              MOVS     r0,#0                 ;880
0001a2  7068              STRB     r0,[r5,#1]            ;880
0001a4  4803              LDR      r0,|L4.436|
0001a6  6005              STR      r5,[r0,#0]            ;883  ; FatFs
0001a8  2000              MOVS     r0,#0                 ;883
0001aa  b00b              ADD      sp,sp,#0x2c
0001ac  bdf0              POP      {r4-r7,pc}
                  |L4.430|
0001ae  2006              MOVS     r0,#6                 ;870
0001b0  b00b              ADD      sp,sp,#0x2c
0001b2  bdf0              POP      {r4-r7,pc}
;;;885    
                          ENDP

                  |L4.436|
                          DCD      ||.data||
                  |L4.440|
                          DCD      0x0000aa55
                  |L4.444|
                          DCD      0x00004146
                  |L4.448|
                          DCD      0x0000fff7

                          AREA ||i.pf_open||, CODE, READONLY, ALIGN=2

                  pf_open PROC
;;;892    
;;;893    FRESULT pf_open (
000000  b530              PUSH     {r4,r5,lr}
;;;894    	const char *path	/* Pointer to the file name */
;;;895    )
;;;896    {
;;;897    	FRESULT res;
;;;898    	DIR dj;
;;;899    	BYTE sp[12], dir[32];
;;;900    	FATFS *fs = FatFs;
000002  4921              LDR      r1,|L5.136|
000004  b091              SUB      sp,sp,#0x44           ;896
;;;901    
;;;902    
;;;903    	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
000006  680c              LDR      r4,[r1,#0]  ; FatFs
000008  2c00              CMP      r4,#0
00000a  d015              BEQ      |L5.56|
;;;904    
;;;905    	fs->flag = 0;
00000c  2500              MOVS     r5,#0
00000e  7065              STRB     r5,[r4,#1]
;;;906    	dj.fn = sp;
000010  a90d              ADD      r1,sp,#0x34
;;;907    	res = follow_path(&dj, dir, path);	/* Follow the file path */
000012  4602              MOV      r2,r0
000014  9109              STR      r1,[sp,#0x24]
000016  4669              MOV      r1,sp
000018  a808              ADD      r0,sp,#0x20
00001a  f7fffffe          BL       follow_path
;;;908    	if (res != FR_OK) return res;		/* Follow failed */
00001e  2800              CMP      r0,#0
000020  d108              BNE      |L5.52|
;;;909    	if (!dir[0] || (dir[DIR_Attr] & AM_DIR)) return FR_NO_FILE;	/* It is a directory */
000022  4668              MOV      r0,sp
000024  7800              LDRB     r0,[r0,#0]
000026  2800              CMP      r0,#0
000028  d003              BEQ      |L5.50|
00002a  4668              MOV      r0,sp
00002c  7ac0              LDRB     r0,[r0,#0xb]
00002e  06c0              LSLS     r0,r0,#27
000030  d505              BPL      |L5.62|
                  |L5.50|
000032  2003              MOVS     r0,#3
                  |L5.52|
;;;910    
;;;911    	fs->org_clust = get_clust(dir);		/* File start cluster */
;;;912    	fs->fsize = ld_dword(dir+DIR_FileSize);	/* File size */
;;;913    	fs->fptr = 0;						/* File pointer */
;;;914    	fs->flag = FA_OPENED;
;;;915    
;;;916    	return FR_OK;
;;;917    }
000034  b011              ADD      sp,sp,#0x44
000036  bd30              POP      {r4,r5,pc}
                  |L5.56|
000038  2005              MOVS     r0,#5                 ;903
00003a  b011              ADD      sp,sp,#0x44
00003c  bd30              POP      {r4,r5,pc}
                  |L5.62|
00003e  4668              MOV      r0,sp
000040  7d40              LDRB     r0,[r0,#0x15]
000042  0201              LSLS     r1,r0,#8
000044  4668              MOV      r0,sp
000046  7d00              LDRB     r0,[r0,#0x14]
000048  4301              ORRS     r1,r1,r0
00004a  4668              MOV      r0,sp
00004c  7ec0              LDRB     r0,[r0,#0x1b]
00004e  040a              LSLS     r2,r1,#16
000050  0201              LSLS     r1,r0,#8
000052  4668              MOV      r0,sp
000054  7e80              LDRB     r0,[r0,#0x1a]
000056  4301              ORRS     r1,r1,r0
000058  4311              ORRS     r1,r1,r2
00005a  4668              MOV      r0,sp
00005c  6221              STR      r1,[r4,#0x20]
00005e  7fc0              LDRB     r0,[r0,#0x1f]
000060  0201              LSLS     r1,r0,#8
000062  4668              MOV      r0,sp
000064  7f80              LDRB     r0,[r0,#0x1e]
000066  4301              ORRS     r1,r1,r0
000068  4668              MOV      r0,sp
00006a  7f40              LDRB     r0,[r0,#0x1d]
00006c  0209              LSLS     r1,r1,#8
00006e  4301              ORRS     r1,r1,r0
000070  4668              MOV      r0,sp
000072  7f00              LDRB     r0,[r0,#0x1c]
000074  0209              LSLS     r1,r1,#8
000076  4301              ORRS     r1,r1,r0
000078  61a5              STR      r5,[r4,#0x18]         ;914
00007a  2001              MOVS     r0,#1                 ;914
00007c  61e1              STR      r1,[r4,#0x1c]         ;914
00007e  7060              STRB     r0,[r4,#1]            ;914
000080  2000              MOVS     r0,#0                 ;916
000082  b011              ADD      sp,sp,#0x44
000084  bd30              POP      {r4,r5,pc}
;;;918    
                          ENDP

000086  0000              DCW      0x0000
                  |L5.136|
                          DCD      ||.data||

                          AREA ||i.pf_opendir||, CODE, READONLY, ALIGN=2

                  pf_opendir PROC
;;;1107   
;;;1108   FRESULT pf_opendir (
000000  b530              PUSH     {r4,r5,lr}
;;;1109   	DIR *dj,			/* Pointer to directory object to create */
;;;1110   	const char *path	/* Pointer to the directory path */
;;;1111   )
;;;1112   {
;;;1113   	FRESULT res;
;;;1114   	BYTE sp[12], dir[32];
;;;1115   	FATFS *fs = FatFs;
000002  4d24              LDR      r5,|L6.148|
000004  4604              MOV      r4,r0                 ;1112
;;;1116   
;;;1117   
;;;1118   	if (!fs) {				/* Check file system */
000006  6828              LDR      r0,[r5,#0]  ; FatFs
000008  b08b              SUB      sp,sp,#0x2c           ;1112
00000a  2800              CMP      r0,#0
00000c  d029              BEQ      |L6.98|
;;;1119   		res = FR_NOT_ENABLED;
;;;1120   	} else {
;;;1121   		dj->fn = sp;
00000e  a808              ADD      r0,sp,#0x20
;;;1122   		res = follow_path(dj, dir, path);		/* Follow the path to the directory */
000010  460a              MOV      r2,r1
000012  6060              STR      r0,[r4,#4]
000014  4669              MOV      r1,sp
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       follow_path
;;;1123   		if (res == FR_OK) {						/* Follow completed */
00001c  2800              CMP      r0,#0
00001e  d11e              BNE      |L6.94|
;;;1124   			if (dir[0]) {						/* It is not the root dir */
000020  4668              MOV      r0,sp
000022  7800              LDRB     r0,[r0,#0]
000024  2800              CMP      r0,#0
000026  d010              BEQ      |L6.74|
;;;1125   				if (dir[DIR_Attr] & AM_DIR) {	/* The object is a directory */
000028  4668              MOV      r0,sp
00002a  7ac0              LDRB     r0,[r0,#0xb]
00002c  06c0              LSLS     r0,r0,#27
00002e  d51b              BPL      |L6.104|
000030  4669              MOV      r1,sp
000032  7d48              LDRB     r0,[r1,#0x15]
000034  7d09              LDRB     r1,[r1,#0x14]
000036  0200              LSLS     r0,r0,#8
000038  4308              ORRS     r0,r0,r1
00003a  0402              LSLS     r2,r0,#16
00003c  4669              MOV      r1,sp
00003e  7ec8              LDRB     r0,[r1,#0x1b]
000040  7e89              LDRB     r1,[r1,#0x1a]
000042  0200              LSLS     r0,r0,#8
000044  4308              ORRS     r0,r0,r1
000046  4310              ORRS     r0,r0,r2
;;;1126   					dj->sclust = get_clust(dir);
000048  60a0              STR      r0,[r4,#8]
                  |L6.74|
00004a  2000              MOVS     r0,#0
00004c  682a              LDR      r2,[r5,#0]  ; FatFs
00004e  8020              STRH     r0,[r4,#0]
000050  68a1              LDR      r1,[r4,#8]
000052  2901              CMP      r1,#1
;;;1127   				} else {							/* The object is not a directory */
;;;1128   					res = FR_NO_FILE;
;;;1129   				}
;;;1130   			}
;;;1131   			if (res == FR_OK) {
;;;1132   				res = dir_rewind(dj);			/* Rewind dir */
000054  d002              BEQ      |L6.92|
000056  6893              LDR      r3,[r2,#8]
000058  428b              CMP      r3,r1
00005a  d808              BHI      |L6.110|
                  |L6.92|
00005c  2001              MOVS     r0,#1
                  |L6.94|
;;;1133   			}
;;;1134   		}
;;;1135   	}
;;;1136   
;;;1137   	return res;
;;;1138   }
00005e  b00b              ADD      sp,sp,#0x2c
000060  bd30              POP      {r4,r5,pc}
                  |L6.98|
000062  2005              MOVS     r0,#5                 ;1119
000064  b00b              ADD      sp,sp,#0x2c
000066  bd30              POP      {r4,r5,pc}
                  |L6.104|
000068  2003              MOVS     r0,#3                 ;1128
00006a  b00b              ADD      sp,sp,#0x2c
00006c  bd30              POP      {r4,r5,pc}
                  |L6.110|
00006e  2900              CMP      r1,#0
000070  d100              BNE      |L6.116|
000072  6911              LDR      r1,[r2,#0x10]
                  |L6.116|
000074  60e1              STR      r1,[r4,#0xc]
000076  6893              LDR      r3,[r2,#8]
000078  1e89              SUBS     r1,r1,#2
00007a  1e9b              SUBS     r3,r3,#2
00007c  428b              CMP      r3,r1
00007e  d801              BHI      |L6.132|
000080  4601              MOV      r1,r0
000082  e003              B        |L6.140|
                  |L6.132|
000084  7893              LDRB     r3,[r2,#2]
000086  434b              MULS     r3,r1,r3
000088  6951              LDR      r1,[r2,#0x14]
00008a  1859              ADDS     r1,r3,r1
                  |L6.140|
00008c  6121              STR      r1,[r4,#0x10]
00008e  b00b              ADD      sp,sp,#0x2c
000090  bd30              POP      {r4,r5,pc}
;;;1139   
                          ENDP

000092  0000              DCW      0x0000
                  |L6.148|
                          DCD      ||.data||

                          AREA ||i.pf_read||, CODE, READONLY, ALIGN=2

                  pf_read PROC
;;;926    
;;;927    FRESULT pf_read (
000000  b5f0              PUSH     {r4-r7,lr}
;;;928    	void* buff,		/* Pointer to the read buffer (NULL:Forward data to the stream)*/
;;;929    	UINT btr,		/* Number of bytes to read */
;;;930    	UINT* br		/* Pointer to number of bytes read */
;;;931    )
;;;932    {
000002  b083              SUB      sp,sp,#0xc
000004  460d              MOV      r5,r1
;;;933    	DRESULT dr;
;;;934    	CLUST clst;
;;;935    	DWORD sect, remain;
;;;936    	UINT rcnt;
;;;937    	BYTE cs, *rbuff = buff;
;;;938    	FATFS *fs = FatFs;
000006  4944              LDR      r1,|L7.280|
000008  9001              STR      r0,[sp,#4]
;;;939    	#if DEBUG_ENABLE
;;;940    	DEBUG_START(DBG_4);
;;;941    	#endif
;;;942    
;;;943    	*br = 0;
00000a  2000              MOVS     r0,#0
00000c  680c              LDR      r4,[r1,#0]  ; FatFs
00000e  4617              MOV      r7,r2                 ;932
000010  8010              STRH     r0,[r2,#0]
;;;944    	if (!fs) return FR_NOT_ENABLED;		/* Check file system */
000012  2c00              CMP      r4,#0
000014  d00e              BEQ      |L7.52|
;;;945    	if (!(fs->flag & FA_OPENED)) return FR_NOT_OPENED;	/* Check if opened */
000016  7860              LDRB     r0,[r4,#1]
000018  07c0              LSLS     r0,r0,#31
00001a  d00e              BEQ      |L7.58|
;;;946    
;;;947    	remain = fs->fsize - fs->fptr;
00001c  69a2              LDR      r2,[r4,#0x18]
00001e  69e0              LDR      r0,[r4,#0x1c]
000020  1a80              SUBS     r0,r0,r2
;;;948    	if (btr > remain) btr = (UINT)remain;			/* Truncate btr by remaining bytes */
000022  4285              CMP      r5,r0
000024  d900              BLS      |L7.40|
000026  b285              UXTH     r5,r0
                  |L7.40|
;;;949    
;;;950    	while (btr)	{									/* Repeat until all data transferred */
000028  2d00              CMP      r5,#0
00002a  d071              BEQ      |L7.272|
                  |L7.44|
;;;951    		if ((fs->fptr % 512) == 0) {				/* On the sector boundary? */
00002c  69a0              LDR      r0,[r4,#0x18]
00002e  05c1              LSLS     r1,r0,#23
000030  d006              BEQ      |L7.64|
000032  e049              B        |L7.200|
                  |L7.52|
000034  2005              MOVS     r0,#5                 ;944
;;;952    			cs = (BYTE)(fs->fptr / 512 & (fs->csize - 1));	/* Sector offset in the cluster */
;;;953    			if (!cs) {								/* On the cluster boundary? */
;;;954    				if (fs->fptr == 0) {				/* On the top of the file? */
;;;955    					clst = fs->org_clust;
;;;956    				} else {
;;;957    					clst = get_fat(fs->curr_clust);
;;;958    				}
;;;959    				if (clst <= 1) ABORT(FR_DISK_ERR);
;;;960    				fs->curr_clust = clst;				/* Update current cluster */
;;;961    			}
;;;962    			sect = clust2sect(fs->curr_clust);		/* Get current sector */
;;;963    			if (!sect) ABORT(FR_DISK_ERR);
;;;964    			fs->dsect = sect + cs;
;;;965    		}
;;;966    		rcnt = 512 - (UINT)fs->fptr % 512;			/* Get partial sector data from sector buffer */
;;;967    		if (rcnt > btr) rcnt = btr;
;;;968    		dr = disk_readp(rbuff, fs->dsect, (UINT)fs->fptr % 512, rcnt);
;;;969    		if (dr) ABORT(FR_DISK_ERR);
;;;970    		fs->fptr += rcnt;							/* Advances file read pointer */
;;;971    		btr -= rcnt; *br += rcnt;					/* Update read counter */
;;;972    		if (rbuff) rbuff += rcnt;					/* Advances the data pointer if destination is memory */
;;;973    	}
;;;974    	#if DEBUG_ENABLE
;;;975    	DEBUG_STOP(DBG_4);
;;;976    	#endif
;;;977    	return FR_OK;
;;;978    }
000036  b003              ADD      sp,sp,#0xc
000038  bdf0              POP      {r4-r7,pc}
                  |L7.58|
00003a  2004              MOVS     r0,#4                 ;945
00003c  b003              ADD      sp,sp,#0xc
00003e  bdf0              POP      {r4-r7,pc}
                  |L7.64|
000040  78a1              LDRB     r1,[r4,#2]            ;952
000042  0a42              LSRS     r2,r0,#9              ;952
000044  1e49              SUBS     r1,r1,#1              ;952
000046  400a              ANDS     r2,r2,r1              ;952
000048  0616              LSLS     r6,r2,#24             ;952
00004a  0e36              LSRS     r6,r6,#24             ;952
00004c  d001              BEQ      |L7.82|
00004e  6a60              LDR      r0,[r4,#0x24]         ;960
000050  e02c              B        |L7.172|
                  |L7.82|
000052  2800              CMP      r0,#0                 ;954
000054  d00b              BEQ      |L7.110|
000056  4930              LDR      r1,|L7.280|
000058  6a60              LDR      r0,[r4,#0x24]         ;954
00005a  6809              LDR      r1,[r1,#0]            ;954  ; FatFs
00005c  2802              CMP      r0,#2                 ;954
00005e  d343              BCC      |L7.232|
000060  688a              LDR      r2,[r1,#8]            ;957
000062  4282              CMP      r2,r0                 ;957
000064  d940              BLS      |L7.232|
000066  780a              LDRB     r2,[r1,#0]            ;957
000068  2a03              CMP      r2,#3                 ;957
00006a  d13d              BNE      |L7.232|
00006c  e001              B        |L7.114|
                  |L7.110|
00006e  6a20              LDR      r0,[r4,#0x20]         ;955
000070  e019              B        |L7.166|
                  |L7.114|
000072  68c9              LDR      r1,[r1,#0xc]          ;955
000074  09c2              LSRS     r2,r0,#7              ;955
000076  1889              ADDS     r1,r1,r2              ;955
000078  0640              LSLS     r0,r0,#25             ;955
00007a  0dc2              LSRS     r2,r0,#23             ;955
00007c  2304              MOVS     r3,#4                 ;955
00007e  4668              MOV      r0,sp                 ;955
000080  f7fffffe          BL       disk_readp
000084  2800              CMP      r0,#0                 ;955
000086  d12f              BNE      |L7.232|
000088  4669              MOV      r1,sp                 ;955
00008a  78c8              LDRB     r0,[r1,#3]            ;955
00008c  7889              LDRB     r1,[r1,#2]            ;955
00008e  0200              LSLS     r0,r0,#8              ;955
000090  4308              ORRS     r0,r0,r1              ;955
000092  4669              MOV      r1,sp                 ;955
000094  7849              LDRB     r1,[r1,#1]            ;955
000096  0200              LSLS     r0,r0,#8              ;955
000098  4308              ORRS     r0,r0,r1              ;955
00009a  4669              MOV      r1,sp                 ;955
00009c  7809              LDRB     r1,[r1,#0]            ;955
00009e  0200              LSLS     r0,r0,#8              ;955
0000a0  4308              ORRS     r0,r0,r1              ;955
0000a2  0100              LSLS     r0,r0,#4              ;955
0000a4  0900              LSRS     r0,r0,#4              ;955
                  |L7.166|
0000a6  2801              CMP      r0,#1                 ;959
0000a8  d91e              BLS      |L7.232|
0000aa  6260              STR      r0,[r4,#0x24]         ;960
                  |L7.172|
0000ac  491a              LDR      r1,|L7.280|
0000ae  1e80              SUBS     r0,r0,#2              ;960
0000b0  6809              LDR      r1,[r1,#0]            ;960  ; FatFs
0000b2  688a              LDR      r2,[r1,#8]            ;960
0000b4  1e92              SUBS     r2,r2,#2              ;960
0000b6  4282              CMP      r2,r0                 ;960
0000b8  d916              BLS      |L7.232|
0000ba  788a              LDRB     r2,[r1,#2]            ;960
0000bc  4342              MULS     r2,r0,r2              ;960
0000be  6948              LDR      r0,[r1,#0x14]         ;960
0000c0  1810              ADDS     r0,r2,r0              ;960
0000c2  d011              BEQ      |L7.232|
0000c4  1980              ADDS     r0,r0,r6              ;964
0000c6  62a0              STR      r0,[r4,#0x28]         ;964
                  |L7.200|
0000c8  8b20              LDRH     r0,[r4,#0x18]         ;966
0000ca  05c2              LSLS     r2,r0,#23             ;966
0000cc  2001              MOVS     r0,#1                 ;966
0000ce  0dd2              LSRS     r2,r2,#23             ;966
0000d0  0240              LSLS     r0,r0,#9              ;966
0000d2  1a86              SUBS     r6,r0,r2              ;966
0000d4  42ae              CMP      r6,r5                 ;967
0000d6  d900              BLS      |L7.218|
0000d8  462e              MOV      r6,r5                 ;967
                  |L7.218|
0000da  4633              MOV      r3,r6                 ;968
0000dc  6aa1              LDR      r1,[r4,#0x28]         ;968
0000de  9801              LDR      r0,[sp,#4]            ;968
0000e0  f7fffffe          BL       disk_readp
0000e4  2800              CMP      r0,#0                 ;969
0000e6  d004              BEQ      |L7.242|
                  |L7.232|
0000e8  2000              MOVS     r0,#0                 ;969
0000ea  7060              STRB     r0,[r4,#1]            ;969
0000ec  2001              MOVS     r0,#1                 ;969
0000ee  b003              ADD      sp,sp,#0xc
0000f0  bdf0              POP      {r4-r7,pc}
                  |L7.242|
0000f2  69a0              LDR      r0,[r4,#0x18]         ;970
0000f4  1980              ADDS     r0,r0,r6              ;970
0000f6  61a0              STR      r0,[r4,#0x18]         ;971
0000f8  1ba8              SUBS     r0,r5,r6              ;971
0000fa  b285              UXTH     r5,r0                 ;971
0000fc  8838              LDRH     r0,[r7,#0]            ;971
0000fe  1980              ADDS     r0,r0,r6              ;971
000100  8038              STRH     r0,[r7,#0]            ;971
000102  9801              LDR      r0,[sp,#4]            ;972
000104  2800              CMP      r0,#0                 ;972
000106  d001              BEQ      |L7.268|
000108  1980              ADDS     r0,r0,r6              ;972
00010a  9001              STR      r0,[sp,#4]            ;972
                  |L7.268|
00010c  2d00              CMP      r5,#0                 ;950
00010e  d18d              BNE      |L7.44|
                  |L7.272|
000110  2000              MOVS     r0,#0                 ;977
000112  b003              ADD      sp,sp,#0xc
000114  bdf0              POP      {r4-r7,pc}
;;;979    #endif
                          ENDP

000116  0000              DCW      0x0000
                  |L7.280|
                          DCD      ||.data||

                          AREA ||i.pf_readdir||, CODE, READONLY, ALIGN=2

                  pf_readdir PROC
;;;1146   
;;;1147   FRESULT pf_readdir (
000000  b5f3              PUSH     {r0,r1,r4-r7,lr}
;;;1148   	DIR *dj,			/* Pointer to the open directory object */
;;;1149   	FILINFO *fno		/* Pointer to file information to return */
;;;1150   )
;;;1151   {
;;;1152   	FRESULT res;
;;;1153   	BYTE sp[12], dir[32];
;;;1154   	FATFS *fs = FatFs;
000002  497d              LDR      r1,|L8.504|
000004  b08d              SUB      sp,sp,#0x34           ;1151
;;;1155   
;;;1156   
;;;1157   	if (!fs) {				/* Check file system */
000006  680a              LDR      r2,[r1,#0]  ; FatFs
000008  4604              MOV      r4,r0                 ;1151
00000a  2a00              CMP      r2,#0
00000c  d014              BEQ      |L8.56|
;;;1158   		res = FR_NOT_ENABLED;
;;;1159   	} else {
;;;1160   		dj->fn = sp;
00000e  a80a              ADD      r0,sp,#0x28
;;;1161   		if (!fno) {
000010  6060              STR      r0,[r4,#4]
000012  980e              LDR      r0,[sp,#0x38]
000014  2800              CMP      r0,#0
000016  d012              BEQ      |L8.62|
000018  6922              LDR      r2,[r4,#0x10]
00001a  2003              MOVS     r0,#3
;;;1162   			res = dir_rewind(dj);
;;;1163   		} else {
;;;1164   			res = dir_read(dj, dir);	/* Get current directory item */
00001c  ae02              ADD      r6,sp,#8
00001e  2a00              CMP      r2,#0
000020  d07d              BEQ      |L8.286|
                  |L8.34|
000022  7820              LDRB     r0,[r4,#0]
000024  2320              MOVS     r3,#0x20
000026  0700              LSLS     r0,r0,#28
000028  0dc2              LSRS     r2,r0,#23
00002a  4630              MOV      r0,r6
00002c  6921              LDR      r1,[r4,#0x10]
00002e  f7fffffe          BL       disk_readp
000032  2800              CMP      r0,#0
000034  d172              BNE      |L8.284|
000036  e01f              B        |L8.120|
                  |L8.56|
000038  2005              MOVS     r0,#5                 ;1158
;;;1165   			if (res == FR_NO_FILE) res = FR_OK;
;;;1166   			if (res == FR_OK) {				/* A valid entry is found */
;;;1167   				get_fileinfo(dj, dir, fno);	/* Get the object information */
;;;1168   				res = dir_next(dj);			/* Increment read index for next */
;;;1169   				if (res == FR_NO_FILE) res = FR_OK;
;;;1170   			}
;;;1171   		}
;;;1172   	}
;;;1173   
;;;1174   	return res;
;;;1175   }
00003a  b00f              ADD      sp,sp,#0x3c
00003c  bdf0              POP      {r4-r7,pc}
                  |L8.62|
00003e  2000              MOVS     r0,#0
000040  8020              STRH     r0,[r4,#0]
000042  68a1              LDR      r1,[r4,#8]
000044  2901              CMP      r1,#1
000046  d002              BEQ      |L8.78|
000048  6893              LDR      r3,[r2,#8]            ;1162
00004a  428b              CMP      r3,r1                 ;1162
00004c  d802              BHI      |L8.84|
                  |L8.78|
00004e  2001              MOVS     r0,#1                 ;1162
000050  b00f              ADD      sp,sp,#0x3c
000052  bdf0              POP      {r4-r7,pc}
                  |L8.84|
000054  2900              CMP      r1,#0
000056  d100              BNE      |L8.90|
000058  6911              LDR      r1,[r2,#0x10]
                  |L8.90|
00005a  60e1              STR      r1,[r4,#0xc]
00005c  6893              LDR      r3,[r2,#8]
00005e  1e89              SUBS     r1,r1,#2
000060  1e9b              SUBS     r3,r3,#2
000062  428b              CMP      r3,r1
000064  d801              BHI      |L8.106|
000066  4601              MOV      r1,r0
000068  e003              B        |L8.114|
                  |L8.106|
00006a  7893              LDRB     r3,[r2,#2]
00006c  434b              MULS     r3,r1,r3
00006e  6951              LDR      r1,[r2,#0x14]
000070  1859              ADDS     r1,r3,r1
                  |L8.114|
000072  6121              STR      r1,[r4,#0x10]
                  |L8.116|
000074  b00f              ADD      sp,sp,#0x3c
000076  bdf0              POP      {r4-r7,pc}
                  |L8.120|
000078  7830              LDRB     r0,[r6,#0]
00007a  2800              CMP      r0,#0
00007c  d054              BEQ      |L8.296|
00007e  7af1              LDRB     r1,[r6,#0xb]
000080  0689              LSLS     r1,r1,#26
000082  0e89              LSRS     r1,r1,#26
000084  28e5              CMP      r0,#0xe5
000086  d003              BEQ      |L8.144|
000088  282e              CMP      r0,#0x2e
00008a  d001              BEQ      |L8.144|
00008c  0708              LSLS     r0,r1,#28
00008e  d552              BPL      |L8.310|
                  |L8.144|
000090  4859              LDR      r0,|L8.504|
000092  4627              MOV      r7,r4
000094  6803              LDR      r3,[r0,#0]  ; FatFs
000096  9301              STR      r3,[sp,#4]
000098  8821              LDRH     r1,[r4,#0]
00009a  1c49              ADDS     r1,r1,#1
00009c  040d              LSLS     r5,r1,#16
00009e  0c2d              LSRS     r5,r5,#16
0000a0  d042              BEQ      |L8.296|
0000a2  693a              LDR      r2,[r7,#0x10]
0000a4  2a00              CMP      r2,#0
0000a6  d03f              BEQ      |L8.296|
0000a8  0729              LSLS     r1,r5,#28
0000aa  d161              BNE      |L8.368|
0000ac  1c52              ADDS     r2,r2,#1
0000ae  613a              STR      r2,[r7,#0x10]
0000b0  68f9              LDR      r1,[r7,#0xc]
0000b2  468c              MOV      r12,r1
0000b4  2900              CMP      r1,#0
0000b6  d00f              BEQ      |L8.216|
0000b8  9a01              LDR      r2,[sp,#4]
0000ba  0929              LSRS     r1,r5,#4
0000bc  7892              LDRB     r2,[r2,#2]
0000be  1e52              SUBS     r2,r2,#1
0000c0  4211              TST      r1,r2
0000c2  d155              BNE      |L8.368|
0000c4  4662              MOV      r2,r12
0000c6  2a02              CMP      r2,#2
0000c8  d328              BCC      |L8.284|
0000ca  6898              LDR      r0,[r3,#8]
0000cc  4290              CMP      r0,r2
0000ce  d925              BLS      |L8.284|
0000d0  7818              LDRB     r0,[r3,#0]
0000d2  2803              CMP      r0,#3
0000d4  d122              BNE      |L8.284|
0000d6  e004              B        |L8.226|
                  |L8.216|
0000d8  9801              LDR      r0,[sp,#4]
0000da  8880              LDRH     r0,[r0,#4]
0000dc  42a8              CMP      r0,r5
0000de  d923              BLS      |L8.296|
0000e0  e046              B        |L8.368|
                  |L8.226|
0000e2  68d8              LDR      r0,[r3,#0xc]
0000e4  09d1              LSRS     r1,r2,#7
0000e6  1841              ADDS     r1,r0,r1
0000e8  0650              LSLS     r0,r2,#25
0000ea  0dc2              LSRS     r2,r0,#23
0000ec  2304              MOVS     r3,#4
0000ee  4668              MOV      r0,sp
0000f0  f7fffffe          BL       disk_readp
0000f4  2800              CMP      r0,#0
0000f6  d111              BNE      |L8.284|
0000f8  4668              MOV      r0,sp
0000fa  78c0              LDRB     r0,[r0,#3]
0000fc  0201              LSLS     r1,r0,#8
0000fe  4668              MOV      r0,sp
000100  7880              LDRB     r0,[r0,#2]
000102  4301              ORRS     r1,r1,r0
000104  4668              MOV      r0,sp
000106  7840              LDRB     r0,[r0,#1]
000108  0209              LSLS     r1,r1,#8
00010a  4301              ORRS     r1,r1,r0
00010c  4668              MOV      r0,sp
00010e  7800              LDRB     r0,[r0,#0]
000110  0209              LSLS     r1,r1,#8
000112  4301              ORRS     r1,r1,r0
000114  0108              LSLS     r0,r1,#4
000116  0900              LSRS     r0,r0,#4
000118  2801              CMP      r0,#1
00011a  d801              BHI      |L8.288|
                  |L8.284|
00011c  2001              MOVS     r0,#1
                  |L8.286|
00011e  e004              B        |L8.298|
                  |L8.288|
000120  9901              LDR      r1,[sp,#4]
000122  6889              LDR      r1,[r1,#8]
000124  4281              CMP      r1,r0
000126  d814              BHI      |L8.338|
                  |L8.296|
000128  2003              MOVS     r0,#3
                  |L8.298|
00012a  2100              MOVS     r1,#0
00012c  6121              STR      r1,[r4,#0x10]         ;1165
00012e  2803              CMP      r0,#3                 ;1165
000130  d001              BEQ      |L8.310|
000132  2800              CMP      r0,#0                 ;1166
                  |L8.308|
000134  d19e              BNE      |L8.116|
                  |L8.310|
000136  9b0e              LDR      r3,[sp,#0x38]         ;1166
000138  6922              LDR      r2,[r4,#0x10]         ;1166
00013a  4618              MOV      r0,r3                 ;1166
00013c  3009              ADDS     r0,r0,#9              ;1166
00013e  a902              ADD      r1,sp,#8              ;1167
000140  2a00              CMP      r2,#0                 ;1167
000142  d04e              BEQ      |L8.482|
000144  2500              MOVS     r5,#0                 ;1167
                  |L8.326|
000146  5d4a              LDRB     r2,[r1,r5]            ;1167
000148  2a20              CMP      r2,#0x20              ;1167
00014a  d01e              BEQ      |L8.394|
00014c  2a05              CMP      r2,#5                 ;1167
00014e  d015              BEQ      |L8.380|
000150  e015              B        |L8.382|
                  |L8.338|
000152  4929              LDR      r1,|L8.504|
000154  60f8              STR      r0,[r7,#0xc]          ;1167
000156  6809              LDR      r1,[r1,#0]            ;1167  ; FatFs
000158  1e80              SUBS     r0,r0,#2              ;1167
00015a  688a              LDR      r2,[r1,#8]            ;1167
00015c  1e92              SUBS     r2,r2,#2              ;1167
00015e  4282              CMP      r2,r0                 ;1167
000160  d801              BHI      |L8.358|
000162  2000              MOVS     r0,#0                 ;1167
000164  e003              B        |L8.366|
                  |L8.358|
000166  788a              LDRB     r2,[r1,#2]            ;1167
000168  4342              MULS     r2,r0,r2              ;1167
00016a  6948              LDR      r0,[r1,#0x14]         ;1167
00016c  1810              ADDS     r0,r2,r0              ;1167
                  |L8.366|
00016e  6138              STR      r0,[r7,#0x10]         ;1167
                  |L8.368|
000170  803d              STRH     r5,[r7,#0]            ;1167
000172  6920              LDR      r0,[r4,#0x10]         ;1167
000174  2800              CMP      r0,#0                 ;1167
000176  d000              BEQ      |L8.378|
000178  e753              B        |L8.34|
                  |L8.378|
00017a  e7dc              B        |L8.310|
                  |L8.380|
00017c  22e5              MOVS     r2,#0xe5              ;1167
                  |L8.382|
00017e  7002              STRB     r2,[r0,#0]            ;1167
000180  1c6d              ADDS     r5,r5,#1              ;1167
000182  b2ed              UXTB     r5,r5                 ;1167
000184  1c40              ADDS     r0,r0,#1              ;1167
000186  2d08              CMP      r5,#8                 ;1167
000188  d3dd              BCC      |L8.326|
                  |L8.394|
00018a  7a0a              LDRB     r2,[r1,#8]            ;1167
00018c  2a20              CMP      r2,#0x20              ;1167
00018e  d011              BEQ      |L8.436|
000190  222e              MOVS     r2,#0x2e              ;1167
000192  7002              STRB     r2,[r0,#0]            ;1167
000194  7a0a              LDRB     r2,[r1,#8]            ;1167
000196  1c40              ADDS     r0,r0,#1              ;1167
000198  2a20              CMP      r2,#0x20              ;1167
00019a  d00b              BEQ      |L8.436|
00019c  7002              STRB     r2,[r0,#0]            ;1167
00019e  7a4a              LDRB     r2,[r1,#9]            ;1167
0001a0  1c40              ADDS     r0,r0,#1              ;1167
0001a2  2a20              CMP      r2,#0x20              ;1167
0001a4  d006              BEQ      |L8.436|
0001a6  7002              STRB     r2,[r0,#0]            ;1167
0001a8  7a8a              LDRB     r2,[r1,#0xa]          ;1167
0001aa  1c40              ADDS     r0,r0,#1              ;1167
0001ac  2a20              CMP      r2,#0x20              ;1167
0001ae  d001              BEQ      |L8.436|
0001b0  7002              STRB     r2,[r0,#0]            ;1167
0001b2  1c40              ADDS     r0,r0,#1              ;1167
                  |L8.436|
0001b4  7aca              LDRB     r2,[r1,#0xb]          ;1167
0001b6  721a              STRB     r2,[r3,#8]            ;1167
0001b8  7fca              LDRB     r2,[r1,#0x1f]         ;1167
0001ba  7f8d              LDRB     r5,[r1,#0x1e]         ;1167
0001bc  0212              LSLS     r2,r2,#8              ;1167
0001be  432a              ORRS     r2,r2,r5              ;1167
0001c0  7f4d              LDRB     r5,[r1,#0x1d]         ;1167
0001c2  0212              LSLS     r2,r2,#8              ;1167
0001c4  432a              ORRS     r2,r2,r5              ;1167
0001c6  7f0d              LDRB     r5,[r1,#0x1c]         ;1167
0001c8  0212              LSLS     r2,r2,#8              ;1167
0001ca  432a              ORRS     r2,r2,r5              ;1167
0001cc  601a              STR      r2,[r3,#0]            ;1167
0001ce  7e4a              LDRB     r2,[r1,#0x19]         ;1167
0001d0  7e0d              LDRB     r5,[r1,#0x18]         ;1167
0001d2  0212              LSLS     r2,r2,#8              ;1167
0001d4  432a              ORRS     r2,r2,r5              ;1167
0001d6  809a              STRH     r2,[r3,#4]            ;1167
0001d8  7dca              LDRB     r2,[r1,#0x17]         ;1167
0001da  7d89              LDRB     r1,[r1,#0x16]         ;1167
0001dc  0212              LSLS     r2,r2,#8              ;1167
0001de  430a              ORRS     r2,r2,r1              ;1167
0001e0  80da              STRH     r2,[r3,#6]            ;1167
                  |L8.482|
0001e2  2100              MOVS     r1,#0                 ;1167
0001e4  7001              STRB     r1,[r0,#0]            ;1167
0001e6  4620              MOV      r0,r4                 ;1168
0001e8  f7fffffe          BL       dir_next
0001ec  2803              CMP      r0,#3                 ;1169
0001ee  d1a1              BNE      |L8.308|
0001f0  2000              MOVS     r0,#0                 ;1169
0001f2  b00f              ADD      sp,sp,#0x3c
0001f4  bdf0              POP      {r4-r7,pc}
;;;1176   
                          ENDP

0001f6  0000              DCW      0x0000
                  |L8.504|
                          DCD      ||.data||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  ||cvt||
000000  809a4541          DCB      0x80,0x9a,0x45,0x41
000004  8e418f80          DCB      0x8e,0x41,0x8f,0x80
000008  45454549          DCB      0x45,0x45,0x45,0x49
00000c  49498e8f          DCB      0x49,0x49,0x8e,0x8f
000010  9092924f          DCB      0x90,0x92,0x92,0x4f
000014  994f5555          DCB      0x99,0x4f,0x55,0x55
000018  59999a9b          DCB      0x59,0x99,0x9a,0x9b
00001c  9c9d9e9f          DCB      0x9c,0x9d,0x9e,0x9f
000020  41494f55          DCB      0x41,0x49,0x4f,0x55
000024  a5a5a6a7          DCB      0xa5,0xa5,0xa6,0xa7
000028  a8a9aaab          DCB      0xa8,0xa9,0xaa,0xab
00002c  acadaeaf          DCB      0xac,0xad,0xae,0xaf
000030  b0b1b2b3          DCB      0xb0,0xb1,0xb2,0xb3
000034  b4b5b6b7          DCB      0xb4,0xb5,0xb6,0xb7
000038  b8b9babb          DCB      0xb8,0xb9,0xba,0xbb
00003c  bcbdbebf          DCB      0xbc,0xbd,0xbe,0xbf
000040  c0c1c2c3          DCB      0xc0,0xc1,0xc2,0xc3
000044  c4c5c6c7          DCB      0xc4,0xc5,0xc6,0xc7
000048  c8c9cacb          DCB      0xc8,0xc9,0xca,0xcb
00004c  cccdcecf          DCB      0xcc,0xcd,0xce,0xcf
000050  d0d1d2d3          DCB      0xd0,0xd1,0xd2,0xd3
000054  d4d5d6d7          DCB      0xd4,0xd5,0xd6,0xd7
000058  d8d9dadb          DCB      0xd8,0xd9,0xda,0xdb
00005c  dcdddedf          DCB      0xdc,0xdd,0xde,0xdf
000060  e0e1e2e3          DCB      0xe0,0xe1,0xe2,0xe3
000064  e4e5e6e7          DCB      0xe4,0xe5,0xe6,0xe7
000068  e8e9eaeb          DCB      0xe8,0xe9,0xea,0xeb
00006c  ecedeeef          DCB      0xec,0xed,0xee,0xef
000070  f0f1f2f3          DCB      0xf0,0xf1,0xf2,0xf3
000074  f4f5f6f7          DCB      0xf4,0xf5,0xf6,0xf7
000078  f8f9fafb          DCB      0xf8,0xf9,0xfa,0xfb
00007c  fcfdfeff          DCB      0xfc,0xfd,0xfe,0xff

                          AREA ||.data||, DATA, ALIGN=2

                  FatFs
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Source\\FS\\pff.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_pff_c_pf_mount____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_pff_c_pf_mount____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_pff_c_pf_mount____REVSH|
#line 462
|__asm___5_pff_c_pf_mount____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
